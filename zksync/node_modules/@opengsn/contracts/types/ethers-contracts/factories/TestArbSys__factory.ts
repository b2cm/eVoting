/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestArbSys, TestArbSysInterface } from "../TestArbSys";

const _abi = [
  {
    inputs: [],
    name: "arbBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStorageGasAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060d08061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a3b1b31d146037578063a94597ff14604f575b600080fd5b603d6055565b60405190815260200160405180910390f35b603d6065565b60006060436011606e565b905090565b60005a60609060645b6000816000190483118215151615609557634e487b7160e01b600052601160045260246000fd5b50029056fea2646970667358221220e3d1eb62f861bbe8e27cf2f09f061195d41d22406455e0c09f49cc01e4dafc5a64736f6c63430008070033";

type TestArbSysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestArbSysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestArbSys__factory extends ContractFactory {
  constructor(...args: TestArbSysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestArbSys> {
    return super.deploy(overrides || {}) as Promise<TestArbSys>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestArbSys {
    return super.attach(address) as TestArbSys;
  }
  override connect(signer: Signer): TestArbSys__factory {
    return super.connect(signer) as TestArbSys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestArbSysInterface {
    return new utils.Interface(_abi) as TestArbSysInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestArbSys {
    return new Contract(address, _abi, signerOrProvider) as TestArbSys;
  }
}
