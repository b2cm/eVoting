/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestForwarderTarget,
  TestForwarderTargetInterface,
} from "../TestForwarderTarget";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Reverting",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "realMsgData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "realSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "origin",
        type: "address",
      },
    ],
    name: "TestForwarderMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "emitMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMsgData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mustReceiveEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "testRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161068238038061068283398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b6105f38061008f6000396000f3fe6080604052600436106100745760003560e01c8063a26388bb1161004e578063a26388bb146100f9578063b6ffacf71461010e578063bf9587261461013b578063ce1b815f1461015d57600080fd5b80632ac0df2614610080578063572b6c05146100a25780637a27578d146100e657600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b3660046103c4565b61017b565b005b3480156100ae57600080fd5b506100d16100bd366004610394565b6000546001600160a01b0391821691161490565b60405190151581526020015b60405180910390f35b6100a06100f4366004610475565b6101cc565b34801561010557600080fd5b506100a061021a565b34801561011a57600080fd5b506101236102bd565b6040516001600160a01b0390911681526020016100dd565b34801561014757600080fd5b506101506102cc565b6040516100dd91906104db565b34801561016957600080fd5b506000546001600160a01b0316610123565b7f855af3b0567c81711540539ad042ef5a2a20d47d9d86ababf362a8e47058b5ef816101a5610310565b6101ad610360565b33326040516101c1969594939291906104ee565b60405180910390a150565b8034146102175760405162461bcd60e51b81526020600482015260146024820152736469646e277420726563656976652076616c756560601b60448201526064015b60405180910390fd5b50565b30156102565760405162461bcd60e51b815260206004820152600b60248201526a185b1dd85e5cc819985a5b60aa1b604482015260640161020e565b7f3f110cf99894407239c5fa1bf0523ea12b54ef6eb3e88be600b6a7f0ff76eb0e6040516102b3906020808252818101527f696620796f7520736565207468697320726576657274206661696c65642e2e2e604082015260600190565b60405180910390a1565b60006102c7610360565b905090565b60606102d6610310565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092949350505050565b3660006014821080159061032e57506000546001600160a01b031633145b156103575760008036610342601482610582565b9261034f93929190610558565b915091509091565b50600091369150565b60006014361080159061037d57506000546001600160a01b031633145b1561038f575060131936013560601c90565b503390565b6000602082840312156103a657600080fd5b81356001600160a01b03811681146103bd57600080fd5b9392505050565b6000602082840312156103d657600080fd5b813567ffffffffffffffff808211156103ee57600080fd5b818401915084601f83011261040257600080fd5b813581811115610414576104146105a7565b604051601f8201601f19908116603f0116810190838211818310171561043c5761043c6105a7565b8160405282815287602084870101111561045557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561048757600080fd5b5035919050565b6000815180845260005b818110156104b457602081850181015186830182015201610498565b818111156104c6576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006103bd602083018461048e565b60a08152600061050160a083018961048e565b828103602084015286815286886020830137600060208883018101919091526001600160a01b039687166040850152948616606084015292909416608090910152601f909301601f19169092019091019392505050565b6000808585111561056857600080fd5b8386111561057557600080fd5b5050820193919092039150565b6000828210156105a257634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a7fb78c2795fe4934ecd2f2966d02231462c13a501cc25f61b251e91d5c076b364736f6c63430008070033";

type TestForwarderTargetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestForwarderTargetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestForwarderTarget__factory extends ContractFactory {
  constructor(...args: TestForwarderTargetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    forwarder: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestForwarderTarget> {
    return super.deploy(
      forwarder,
      overrides || {}
    ) as Promise<TestForwarderTarget>;
  }
  override getDeployTransaction(
    forwarder: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(forwarder, overrides || {});
  }
  override attach(address: string): TestForwarderTarget {
    return super.attach(address) as TestForwarderTarget;
  }
  override connect(signer: Signer): TestForwarderTarget__factory {
    return super.connect(signer) as TestForwarderTarget__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestForwarderTargetInterface {
    return new utils.Interface(_abi) as TestForwarderTargetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestForwarderTarget {
    return new Contract(address, _abi, signerOrProvider) as TestForwarderTarget;
  }
}
