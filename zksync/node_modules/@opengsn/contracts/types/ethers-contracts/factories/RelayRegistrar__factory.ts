/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RelayRegistrar,
  RelayRegistrarInterface,
} from "../RelayRegistrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_relayRegistrationMaxAge",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayManager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "relayHub",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32[3]",
        name: "relayUrl",
        type: "bytes32[3]",
      },
    ],
    name: "RelayServerRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayRegistrationMaxAge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_relayRegistrationMaxAge",
        type: "uint256",
      },
    ],
    name: "setRelayRegistrationMaxAge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayHub",
        type: "address",
      },
      {
        internalType: "bytes32[3]",
        name: "url",
        type: "bytes32[3]",
      },
    ],
    name: "registerRelayServer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayHub",
        type: "address",
      },
      {
        internalType: "address",
        name: "relayManager",
        type: "address",
      },
    ],
    name: "getRelayInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "lastSeenBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint40",
            name: "lastSeenTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint32",
            name: "firstSeenBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint40",
            name: "firstSeenTimestamp",
            type: "uint40",
          },
          {
            internalType: "bytes32[3]",
            name: "urlParts",
            type: "bytes32[3]",
          },
          {
            internalType: "address",
            name: "relayManager",
            type: "address",
          },
        ],
        internalType: "struct IRelayRegistrar.RelayInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayHub",
        type: "address",
      },
    ],
    name: "readRelayInfos",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "lastSeenBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint40",
            name: "lastSeenTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint32",
            name: "firstSeenBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint40",
            name: "firstSeenTimestamp",
            type: "uint40",
          },
          {
            internalType: "bytes32[3]",
            name: "urlParts",
            type: "bytes32[3]",
          },
          {
            internalType: "address",
            name: "relayManager",
            type: "address",
          },
        ],
        internalType: "struct IRelayRegistrar.RelayInfo[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayHub",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "oldestBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oldestBlockTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxCount",
        type: "uint256",
      },
    ],
    name: "readRelayInfosInRange",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "lastSeenBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint40",
            name: "lastSeenTimestamp",
            type: "uint40",
          },
          {
            internalType: "uint32",
            name: "firstSeenBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint40",
            name: "firstSeenTimestamp",
            type: "uint40",
          },
          {
            internalType: "bytes32[3]",
            name: "urlParts",
            type: "bytes32[3]",
          },
          {
            internalType: "address",
            name: "relayManager",
            type: "address",
          },
        ],
        internalType: "struct IRelayRegistrar.RelayInfo[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610d06380380610d0683398101604081905261002f91610108565b6100383361004b565b6100418161009b565b5043608052610121565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100a36100a8565b600355565b6000546001600160a01b031633146101065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b60006020828403121561011a57600080fd5b5051919050565b608051610bcb61013b600039600060d80152610bcb6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610150578063953f17681461016b578063c240c4561461017e578063e04e5b4f14610191578063f2fde38b14610199578063f999ea82146101ac57600080fd5b806301ffc9a7146100ae57806320ffd56d146100d657806355fb8d6014610106578063715018a61461012657806378ae6b8714610130575b600080fd5b6100c16100bc3660046109f0565b6101bf565b60405190151581526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016100cd565b6101196101143660046109b7565b6101f6565b6040516100cd9190610ac3565b61012e6103cd565b005b61014361013e36600461094a565b6103e1565b6040516100cd9190610b12565b6000546040516001600160a01b0390911681526020016100cd565b61012e61017936600461097d565b610505565b61012e61018c366004610a1a565b6105bc565b6003546100f8565b61012e6101a736600461092f565b6105c9565b6101196101ba36600461092f565b610642565b60006001600160e01b03198216634302517960e01b14806101f057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001600160a01b038416600090815260026020526040812080546060929084116102205783610223565b81545b67ffffffffffffffff81111561023b5761023b610b7f565b60405190808252806020026020018201604052801561027457816020015b610261610865565b8152602001906001900390816102595790505b50925060005b82548110156103c157600083828154811061029757610297610b69565b60009182526020822001546001600160a01b031691506102b78a836103e1565b905088816000015163ffffffff1610806102db575087816020015164ffffffffff16105b156102e75750506103af565b604051637371170960e11b81526001600160a01b0383811660048301528b169063e6e22e129060240160006040518083038186803b15801561032857600080fd5b505afa925050508015610339575060015b610375573d808015610367576040519150601f19603f3d011682016040523d82523d6000602084013e61036c565b606091505b505050506103af565b80868561038181610b38565b96508151811061039357610393610b69565b60200260200101819052508684106103ac5750506103c1565b50505b806103b981610b38565b91505061027a565b50825250949350505050565b6103d5610682565b6103df60006106dc565b565b6103e9610865565b6001600160a01b0383811660009081526001602081815260408084209487168452938152838320845160c081018652815463ffffffff808216835264ffffffffff6401000000008304811695840195909552600160481b82041682880152600160681b900490921660608084019190915285519081019586905293949193909260808501929084019060039082845b815481526020019060010190808311610478575050509183525050600491909101546001600160a01b0316602090910152805190915063ffffffff166104fe5760405162461bcd60e51b81526020600482015260166024820152751c995b185e53585b9859d95c881b9bdd08199bdd5b9960521b60448201526064015b60405180910390fd5b9392505050565b604051634f7de03160e01b81523360048201819052906001600160a01b03841690634f7de03190602401600060405180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b50505050826001600160a01b0316816001600160a01b03167f46962bfc4fa4f2605ce5867e8135e19bf313555ba5936b9adc4a687ceb3a92ba846040516105a49190610ab0565b60405180910390a36105b781848461072c565b505050565b6105c4610682565b600355565b6105d1610682565b6001600160a01b0381166106365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f5565b61063f816106dc565b50565b60606000429050600060035482101561065c576000610669565b6003546106699083610b21565b905061067a846000836103e86101f6565b949350505050565b6000546001600160a01b031633146103df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061073883856107ed565b8054909150600160481b900463ffffffff1661079057805471ffffffffffffffffff0000000000000000001916600160481b4363ffffffff160264ffffffffff60681b191617600160681b4264ffffffffff16021781555b80544363ffffffff1668ffffffffffffffffff19909116176401000000004264ffffffffff16021781556004810180546001600160a01b0319166001600160a01b0386161790556107e6600182018360036108a2565b5050505050565b6001600160a01b0380831660009081526001602090815260408083209385168352929052908120805463ffffffff166104fe576001600160a01b0393841660009081526002602090815260408220805460018101825590835291200180546001600160a01b0319169390941692909217909255919050565b6040805160c0810182526000808252602082018190529181018290526060810191909152608081016108956108e0565b8152600060209091015290565b82600381019282156108d0579160200282015b828111156108d05782358255916020019190600101906108b5565b506108dc9291506108fe565b5090565b60405180606001604052806003906020820280368337509192915050565b5b808211156108dc57600081556001016108ff565b80356001600160a01b038116811461092a57600080fd5b919050565b60006020828403121561094157600080fd5b6104fe82610913565b6000806040838503121561095d57600080fd5b61096683610913565b915061097460208401610913565b90509250929050565b6000806080838503121561099057600080fd5b61099983610913565b9150836080840111156109ab57600080fd5b50926020919091019150565b600080600080608085870312156109cd57600080fd5b6109d685610913565b966020860135965060408601359560600135945092505050565b600060208284031215610a0257600080fd5b81356001600160e01b0319811681146104fe57600080fd5b600060208284031215610a2c57600080fd5b5035919050565b63ffffffff80825116835260208083015164ffffffffff808216838701528360408601511660408701528060608601511660608701525050608083015191506080840160005b6003811015610a9657835182529282019290820190600101610a79565b5050505060a001516001600160a01b031660e09190910152565b6060818101908383376000815292915050565b6020808252825182820181905260009190848201906040850190845b81811015610b0657610af2838551610a33565b928401926101009290920191600101610adf565b50909695505050505050565b61010081016101f08284610a33565b600082821015610b3357610b33610b53565b500390565b6000600019821415610b4c57610b4c610b53565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208f530840676bb7dc55aa4692b6da49011cc00bc72fa201d7a404915722795bb464736f6c63430008070033";

type RelayRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayRegistrar__factory extends ContractFactory {
  constructor(...args: RelayRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _relayRegistrationMaxAge: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<RelayRegistrar> {
    return super.deploy(
      _relayRegistrationMaxAge,
      overrides || {}
    ) as Promise<RelayRegistrar>;
  }
  override getDeployTransaction(
    _relayRegistrationMaxAge: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _relayRegistrationMaxAge,
      overrides || {}
    );
  }
  override attach(address: string): RelayRegistrar {
    return super.attach(address) as RelayRegistrar;
  }
  override connect(signer: Signer): RelayRegistrar__factory {
    return super.connect(signer) as RelayRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayRegistrarInterface {
    return new utils.Interface(_abi) as RelayRegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayRegistrar {
    return new Contract(address, _abi, signerOrProvider) as RelayRegistrar;
  }
}
