import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestRelayHubValidator, TestRelayHubValidatorInterface } from "../TestRelayHubValidator";
type TestRelayHubValidatorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestRelayHubValidator__factory extends ContractFactory {
    constructor(...args: TestRelayHubValidatorConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<TestRelayHubValidator>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): TestRelayHubValidator;
    connect(signer: Signer): TestRelayHubValidator__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506103f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806321b3a7e41461003b5780638787309d14610050575b600080fd5b61004e610049366004610230565b610075565b005b61006361005e3660046101ee565b61008e565b60405190815260200160405180910390f35b610084888887878787876100a1565b5050505050505050565b600061009a838361017f565b9392505050565b60006100c66100b36020880188610367565b6100c19060c0810190610300565b61017f565b6100e16100d38880610347565b6100c19060a0810190610300565b6100eb858561017f565b6100f5888861017f565b6100ff8c8c61017f565b61010b906102c461037d565b610115919061037d565b61011f919061037d565b610129919061037d565b610133919061037d565b90503681146100845760405162461bcd60e51b81526020600482015260146024820152736578747261206d73672e6461746120627974657360601b604482015260640160405180910390fd5b600061018e601f600019610395565b61019983601f61037d565b61009a9116602061037d565b60008083601f8401126101b757600080fd5b50813567ffffffffffffffff8111156101cf57600080fd5b6020830191508360208285010111156101e757600080fd5b9250929050565b6000806020838503121561020157600080fd5b823567ffffffffffffffff81111561021857600080fd5b610224858286016101a5565b90969095509350505050565b60008060008060008060008060a0898b03121561024c57600080fd5b883567ffffffffffffffff8082111561026457600080fd5b6102708c838d016101a5565b909a50985060208b0135975060408b013591508082111561029057600080fd5b908a01906040828d0312156102a457600080fd5b90955060608a013590808211156102ba57600080fd5b6102c68c838d016101a5565b909650945060808b01359150808211156102df57600080fd5b506102ec8b828c016101a5565b999c989b5096995094979396929594505050565b6000808335601e1984360301811261031757600080fd5b83018035915067ffffffffffffffff82111561033257600080fd5b6020019150368190038213156101e757600080fd5b6000823560de1983360301811261035d57600080fd5b9190910192915050565b6000823560fe1983360301811261035d57600080fd5b60008219821115610390576103906103ac565b500190565b6000828210156103a7576103a76103ac565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b1d34d648f78749a6d54821ec8fda9274645da2842cbbb501039ab7df57ce29864736f6c63430008070033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "domainSeparatorName";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "gas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nonce";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "validUntilTime";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IForwarder.ForwardRequest";
                readonly name: "request";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "maxFeePerGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxPriorityFeePerGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "transactionCalldataGasUsed";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "relayWorker";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "paymaster";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "forwarder";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "paymasterData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "clientId";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct GsnTypes.RelayData";
                readonly name: "relayData";
                readonly type: "tuple";
            }];
            readonly internalType: "struct GsnTypes.RelayRequest";
            readonly name: "relayRequest";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "approvalData";
            readonly type: "bytes";
        }];
        readonly name: "dummyRelayCall";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "buf";
            readonly type: "bytes";
        }];
        readonly name: "dynamicParamSize";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): TestRelayHubValidatorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestRelayHubValidator;
}
export {};
