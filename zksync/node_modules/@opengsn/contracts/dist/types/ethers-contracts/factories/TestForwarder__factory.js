"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestForwarder__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bool",
                name: "success",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "string",
                name: "error",
                type: "string",
            },
        ],
        name: "Result",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "contract Forwarder",
                name: "forwarder",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "gas",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "validUntilTime",
                        type: "uint256",
                    },
                ],
                internalType: "struct IForwarder.ForwardRequest",
                name: "req",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "domainSeparator",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "requestTypeHash",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "suffixData",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "sig",
                type: "bytes",
            },
        ],
        name: "callExecute",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "ret",
                type: "bytes",
            },
        ],
        name: "decodeErrorMessage",
        outputs: [
            {
                internalType: "string",
                name: "message",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "getChainId",
        outputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506107f2806100206000396000f3fe6080604052600436106100345760003560e01c80633408e470146100395780634bcc3ef714610059578063b20e01591461006e575b600080fd5b34801561004557600080fd5b506040514681526020015b60405180910390f35b61006c6100673660046103ee565b61009b565b005b34801561007a57600080fd5b5061008e61008936600461037c565b610201565b60405161005091906105f6565b600080876001600160a01b031663e024dc7f3489898989896040518763ffffffff1660e01b81526004016100d3959493929190610609565b6000604051808303818588803b1580156100ec57600080fd5b505af1158015610100573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526101299190810190610312565b915091507f04501845adb21423b72bbb993fbc1df7e45ebdafdd8278f36ccbec80643ab25682836101d05760405163b20e015960e01b8152309063b20e0159906101779086906004016105f6565b60006040518083038186803b15801561018f57600080fd5b505afa1580156101a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101cb9190810190610566565b6101e1565b604051806020016040528060008152505b6040516101ef9291906105db565b60405180910390a15050505050505050565b6060604482111561022d576102198260048186610734565b8101906102269190610515565b9050610267565b82828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b92915050565b600061028061027b8461070c565b6106db565b905082815283838301111561029457600080fd5b828260208301376000602084830101529392505050565b60006102b961027b8461070c565b90508281528383830111156102cd57600080fd5b6102db83602083018461075e565b9392505050565b80356102ed816107a4565b919050565b600082601f83011261030357600080fd5b6102db8383356020850161026d565b6000806040838503121561032557600080fd5b8251801515811461033557600080fd5b602084015190925067ffffffffffffffff81111561035257600080fd5b8301601f8101851361036357600080fd5b610372858251602084016102ab565b9150509250929050565b6000806020838503121561038f57600080fd5b823567ffffffffffffffff808211156103a757600080fd5b818501915085601f8301126103bb57600080fd5b8135818111156103ca57600080fd5b8660208285010111156103dc57600080fd5b60209290920196919550909350505050565b60008060008060008060c0878903121561040757600080fd5b8635610412816107a4565b9550602087013567ffffffffffffffff8082111561042f57600080fd5b9088019060e0828b03121561044357600080fd5b61044b6106b2565b610454836102e2565b8152610462602084016102e2565b602082015260408301356040820152606083013560608201526080830135608082015260a08301358281111561049757600080fd5b6104a38c8286016102f2565b60a08301525060c083013560c082015280975050604089013595506060890135945060808901359150808211156104d957600080fd5b6104e58a838b016102f2565b935060a08901359150808211156104fb57600080fd5b5061050889828a016102f2565b9150509295509295509295565b60006020828403121561052757600080fd5b813567ffffffffffffffff81111561053e57600080fd5b8201601f8101841361054f57600080fd5b61055e8482356020840161026d565b949350505050565b60006020828403121561057857600080fd5b815167ffffffffffffffff81111561058f57600080fd5b8201601f810184136105a057600080fd5b61055e848251602084016102ab565b600081518084526105c781602086016020860161075e565b601f01601f19169290920160200192915050565b821515815260406020820152600061055e60408301846105af565b6020815260006102db60208301846105af565b60a08152600060018060a01b038088511660a08401528060208901511660c084015250604087015160e08301526060870151610100830152608087015161012083015260a087015160e06101408401526106676101808401826105af565b905060c0880151610160840152866020840152856040840152828103606084015261069281866105af565b905082810360808401526106a681856105af565b98975050505050505050565b60405160e0810167ffffffffffffffff811182821017156106d5576106d561078e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156107045761070461078e565b604052919050565b600067ffffffffffffffff8211156107265761072661078e565b50601f01601f191660200190565b6000808585111561074457600080fd5b8386111561075157600080fd5b5050820193919092039150565b60005b83811015610779578181015183820152602001610761565b83811115610788576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146107b957600080fd5b5056fea264697066735822122094997803ae0e117125e7b78516f29de3f74e29a4af9f857c0f0f53421d0b290d64736f6c63430008070033";
const isSuperArgs = (xs) => xs.length > 1;
class TestForwarder__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestForwarder__factory = TestForwarder__factory;
TestForwarder__factory.bytecode = _bytecode;
TestForwarder__factory.abi = _abi;
//# sourceMappingURL=TestForwarder__factory.js.map