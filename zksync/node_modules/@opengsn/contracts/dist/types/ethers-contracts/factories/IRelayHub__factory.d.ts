import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IRelayHub, IRelayHubInterface } from "../IRelayHub";
export declare class IRelayHub__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "relayManager";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "AbandonedRelayManagerBalanceEscheated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "paymaster";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "Deposited";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "deprecationTime";
            readonly type: "uint256";
        }];
        readonly name: "HubDeprecated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "maxWorkerCount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "gasReserve";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "postOverhead";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "gasOverhead";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumUnstakeDelay";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "devAddress";
                readonly type: "address";
            }, {
                readonly internalType: "uint8";
                readonly name: "devFee";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint80";
                readonly name: "baseRelayFee";
                readonly type: "uint80";
            }, {
                readonly internalType: "uint16";
                readonly name: "pctRelayFee";
                readonly type: "uint16";
            }];
            readonly indexed: false;
            readonly internalType: "struct IRelayHub.RelayHubConfig";
            readonly name: "config";
            readonly type: "tuple";
        }];
        readonly name: "RelayHubConfigured";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "relayManager";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "newRelayWorkers";
            readonly type: "address[]";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "workersCount";
            readonly type: "uint256";
        }];
        readonly name: "RelayWorkersAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "minimumStake";
            readonly type: "uint256";
        }];
        readonly name: "StakingTokenDataChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "relayManager";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "paymaster";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "relayRequestID";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "relayWorker";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "selector";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "innerGasUsed";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "reason";
            readonly type: "bytes";
        }];
        readonly name: "TransactionRejectedByPaymaster";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "relayManager";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "relayWorker";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "relayRequestID";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "paymaster";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes4";
            readonly name: "selector";
            readonly type: "bytes4";
        }, {
            readonly indexed: false;
            readonly internalType: "enum IRelayHub.RelayCallStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "charge";
            readonly type: "uint256";
        }];
        readonly name: "TransactionRelayed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "enum IRelayHub.RelayCallStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "returnValue";
            readonly type: "bytes";
        }];
        readonly name: "TransactionResult";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "dest";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "Withdrawn";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "newRelayWorkers";
            readonly type: "address[]";
        }];
        readonly name: "addRelayWorkers";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "relayManager";
            readonly type: "address";
        }];
        readonly name: "onRelayServerRegistered";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly name: "depositFor";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "dest";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable[]";
            readonly name: "dest";
            readonly type: "address[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "amount";
            readonly type: "uint256[]";
        }];
        readonly name: "withdrawMultiple";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "domainSeparatorName";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxAcceptanceBudget";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "gas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nonce";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "validUntilTime";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IForwarder.ForwardRequest";
                readonly name: "request";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "maxFeePerGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxPriorityFeePerGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "transactionCalldataGasUsed";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "relayWorker";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "paymaster";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "forwarder";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "paymasterData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "clientId";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct GsnTypes.RelayData";
                readonly name: "relayData";
                readonly type: "tuple";
            }];
            readonly internalType: "struct GsnTypes.RelayRequest";
            readonly name: "relayRequest";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "approvalData";
            readonly type: "bytes";
        }];
        readonly name: "relayCall";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "paymasterAccepted";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "charge";
            readonly type: "uint256";
        }, {
            readonly internalType: "enum IRelayHub.RelayCallStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes";
            readonly name: "returnValue";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "relayWorker";
            readonly type: "address";
        }, {
            readonly internalType: "address payable";
            readonly name: "beneficiary";
            readonly type: "address";
        }];
        readonly name: "penalize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "maxWorkerCount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "gasReserve";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "postOverhead";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "gasOverhead";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumUnstakeDelay";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "devAddress";
                readonly type: "address";
            }, {
                readonly internalType: "uint8";
                readonly name: "devFee";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint80";
                readonly name: "baseRelayFee";
                readonly type: "uint80";
            }, {
                readonly internalType: "uint16";
                readonly name: "pctRelayFee";
                readonly type: "uint16";
            }];
            readonly internalType: "struct IRelayHub.RelayHubConfig";
            readonly name: "_config";
            readonly type: "tuple";
        }];
        readonly name: "setConfiguration";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IERC20[]";
            readonly name: "token";
            readonly type: "address[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "minimumStake";
            readonly type: "uint256[]";
        }];
        readonly name: "setMinimumStakes";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_deprecationTime";
            readonly type: "uint256";
        }];
        readonly name: "deprecateHub";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "relayManager";
            readonly type: "address";
        }];
        readonly name: "escheatAbandonedRelayBalance";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "gasUsed";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "maxFeePerGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxPriorityFeePerGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "transactionCalldataGasUsed";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "relayWorker";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "paymaster";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "forwarder";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "paymasterData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "clientId";
                readonly type: "uint256";
            }];
            readonly internalType: "struct GsnTypes.RelayData";
            readonly name: "relayData";
            readonly type: "tuple";
        }];
        readonly name: "calculateCharge";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "charge";
            readonly type: "uint256";
        }];
        readonly name: "calculateDevCharge";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getConfiguration";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "maxWorkerCount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "gasReserve";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "postOverhead";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "gasOverhead";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumUnstakeDelay";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "devAddress";
                readonly type: "address";
            }, {
                readonly internalType: "uint8";
                readonly name: "devFee";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint80";
                readonly name: "baseRelayFee";
                readonly type: "uint80";
            }, {
                readonly internalType: "uint16";
                readonly name: "pctRelayFee";
                readonly type: "uint16";
            }];
            readonly internalType: "struct IRelayHub.RelayHubConfig";
            readonly name: "config";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "getMinimumStakePerToken";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "worker";
            readonly type: "address";
        }];
        readonly name: "getWorkerManager";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "manager";
            readonly type: "address";
        }];
        readonly name: "getWorkerCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getStakeManager";
        readonly outputs: readonly [{
            readonly internalType: "contract IStakeManager";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getPenalizer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRelayRegistrar";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getBatchGateway";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "relayManager";
            readonly type: "address";
        }];
        readonly name: "verifyRelayManagerStaked";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "relayManager";
            readonly type: "address";
        }];
        readonly name: "isRelayEscheatable";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isDeprecated";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDeprecationTime";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getCreationBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "versionHub";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "aggregateGasleft";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IRelayHubInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IRelayHub;
}
