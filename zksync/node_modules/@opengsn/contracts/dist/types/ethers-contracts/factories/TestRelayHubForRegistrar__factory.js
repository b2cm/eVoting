"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestRelayHubForRegistrar__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "isStaked",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "relayManager",
                type: "address",
            },
            {
                internalType: "bool",
                name: "_isStaked",
                type: "bool",
            },
        ],
        name: "setRelayManagerStaked",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "relayManager",
                type: "address",
            },
        ],
        name: "verifyCanRegister",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "relayManager",
                type: "address",
            },
        ],
        name: "verifyRelayManagerStaked",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "relayManager",
                type: "address",
            },
        ],
        name: "onRelayServerRegistered",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506102f7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634f7de0311461005c5780636177fd1814610071578063e4c557dc146100a8578063e6e22e12146100e1578063f8ba1e98146100f4575b600080fd5b61006f61006a366004610263565b610107565b005b61009461007f366004610263565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b61006f6100b6366004610285565b6001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b61006f6100ef366004610263565b610177565b61006f610102366004610263565b6101df565b6001600160a01b03811660009081526020819052604090205460ff166101745760405162461bcd60e51b815260206004820181905260248201527f6f6e52656c617953657276657252656769737465726564206e6f207374616b6560448201526064015b60405180910390fd5b50565b6001600160a01b03811660009081526020819052604090205460ff166101745760405162461bcd60e51b815260206004820181905260248201527f76657269667952656c61794d616e616765725374616b65643a206973206e6f74604482015260640161016b565b6001600160a01b03811660009081526020819052604090205460ff166101745760405162461bcd60e51b815260206004820152601960248201527f76657269667943616e52656769737465723a2063616e6e6f7400000000000000604482015260640161016b565b80356001600160a01b038116811461025e57600080fd5b919050565b60006020828403121561027557600080fd5b61027e82610247565b9392505050565b6000806040838503121561029857600080fd5b6102a183610247565b9150602083013580151581146102b657600080fd5b80915050925092905056fea264697066735822122003080a937c6cf570cdef043f1431689ae1e71c47c3b3c42bfd4e0a347523811c64736f6c63430008070033";
const isSuperArgs = (xs) => xs.length > 1;
class TestRelayHubForRegistrar__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestRelayHubForRegistrar__factory = TestRelayHubForRegistrar__factory;
TestRelayHubForRegistrar__factory.bytecode = _bytecode;
TestRelayHubForRegistrar__factory.abi = _abi;
//# sourceMappingURL=TestRelayHubForRegistrar__factory.js.map