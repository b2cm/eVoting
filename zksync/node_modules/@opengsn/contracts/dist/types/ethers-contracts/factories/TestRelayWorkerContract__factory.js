"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestRelayWorkerContract__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IRelayHub",
                name: "hub",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "maxAcceptanceBudget",
                type: "uint256",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "from",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "to",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "value",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "gas",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "nonce",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "data",
                                type: "bytes",
                            },
                            {
                                internalType: "uint256",
                                name: "validUntilTime",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IForwarder.ForwardRequest",
                        name: "request",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "maxFeePerGas",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "maxPriorityFeePerGas",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "transactionCalldataGasUsed",
                                type: "uint256",
                            },
                            {
                                internalType: "address",
                                name: "relayWorker",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "paymaster",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "forwarder",
                                type: "address",
                            },
                            {
                                internalType: "bytes",
                                name: "paymasterData",
                                type: "bytes",
                            },
                            {
                                internalType: "uint256",
                                name: "clientId",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct GsnTypes.RelayData",
                        name: "relayData",
                        type: "tuple",
                    },
                ],
                internalType: "struct GsnTypes.RelayRequest",
                name: "relayRequest",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "relayCall",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506106dc806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636a3fa6fc14610030575b600080fd5b61004361003e366004610290565b610045565b005b604051633654317160e11b81526001600160a01b03851690636ca862e2906100759086908690869060040161047f565b600060405180830381600087803b15801561008f57600080fd5b505af11580156100a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526100cb91908101906101df565b5050505050505050565b80356100e08161068e565b919050565b600082601f8301126100f657600080fd5b813561010961010482610620565b6105ef565b81815284602083860101111561011e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000610100828403121561014e57600080fd5b61015661057f565b905081358152602082013560208201526040820135604082015261017c606083016100d5565b606082015261018d608083016100d5565b608082015261019e60a083016100d5565b60a082015260c082013567ffffffffffffffff8111156101bd57600080fd5b6101c9848285016100e5565b60c08301525060e082013560e082015292915050565b600080600080608085870312156101f557600080fd5b8451801515811461020557600080fd5b6020860151604087015191955093506007811061022157600080fd5b606086015190925067ffffffffffffffff81111561023e57600080fd5b8501601f8101871361024f57600080fd5b805161025d61010482610620565b81815288602083850101111561027257600080fd5b610283826020830160208601610648565b9598949750929550505050565b600080600080608085870312156102a657600080fd5b84356102b18161068e565b935060208501359250604085013567ffffffffffffffff808211156102d557600080fd5b90860190604082890312156102e957600080fd5b6102f16105a9565b82358281111561030057600080fd5b830160e0818b03121561031257600080fd5b61031a6105cc565b610323826100d5565b8152610331602083016100d5565b602082015260408201356040820152606082013560608201526080820135608082015260a08201358481111561036657600080fd5b6103728c8285016100e5565b60a08301525060c082013560c0820152808352505060208301358281111561039957600080fd5b6103a58a82860161013b565b602083015250935060608701359150808211156103c157600080fd5b506103ce878288016100e5565b91505092959194509250565b600081518084526103f2816020860160208601610648565b601f01601f19169290920160200192915050565b6000610100825184526020830151602085015260408301516040850152606083015160018060a01b0380821660608701528060808601511660808701528060a08601511660a0870152505060c08301518160c0860152610468828601826103da565b91505060e083015160e08501528091505092915050565b60a08152601760a08201527f47534e2052656c61796564205472616e73616374696f6e00000000000000000060c082015283602082015260e0604082015260008351604060e084015260018060a01b038082511661012085015280602083015116610140850152506040810151610160840152606081015161018084015260808101516101a084015260a081015160e06101c08501526105236102008501826103da565b60c092909201516101e085015250602085015183820360df19016101008501529061054e8183610406565b915050828103606084015261056381856103da565b8381036080850152600081529050602081019695505050505050565b604051610100810167ffffffffffffffff811182821017156105a3576105a3610678565b60405290565b6040805190810167ffffffffffffffff811182821017156105a3576105a3610678565b60405160e0810167ffffffffffffffff811182821017156105a3576105a3610678565b604051601f8201601f1916810167ffffffffffffffff8111828210171561061857610618610678565b604052919050565b600067ffffffffffffffff82111561063a5761063a610678565b50601f01601f191660200190565b60005b8381101561066357818101518382015260200161064b565b83811115610672576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146106a357600080fd5b5056fea264697066735822122014ae605511d91d1f9c7487288d381284d96be3c4174cbb3b2836c7a5ae7c318164736f6c63430008070033";
const isSuperArgs = (xs) => xs.length > 1;
class TestRelayWorkerContract__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TestRelayWorkerContract__factory = TestRelayWorkerContract__factory;
TestRelayWorkerContract__factory.bytecode = _bytecode;
TestRelayWorkerContract__factory.abi = _abi;
//# sourceMappingURL=TestRelayWorkerContract__factory.js.map