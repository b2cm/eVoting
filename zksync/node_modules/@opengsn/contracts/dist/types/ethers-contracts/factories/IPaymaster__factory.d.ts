import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IPaymaster, IPaymasterInterface } from "../IPaymaster";
export declare class IPaymaster__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getGasAndDataLimits";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "acceptanceBudget";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "preRelayedCallGasLimit";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "postRelayedCallGasLimit";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "calldataSizeLimit";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IPaymaster.GasAndDataLimits";
            readonly name: "limits";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getTrustedForwarder";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "trustedForwarder";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRelayHub";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "relayHub";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "from";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "gas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nonce";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "validUntilTime";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IForwarder.ForwardRequest";
                readonly name: "request";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "maxFeePerGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "maxPriorityFeePerGas";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "transactionCalldataGasUsed";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "relayWorker";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "paymaster";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "forwarder";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "paymasterData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "clientId";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct GsnTypes.RelayData";
                readonly name: "relayData";
                readonly type: "tuple";
            }];
            readonly internalType: "struct GsnTypes.RelayRequest";
            readonly name: "relayRequest";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "approvalData";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxPossibleGas";
            readonly type: "uint256";
        }];
        readonly name: "preRelayedCall";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "context";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "rejectOnRecipientRevert";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "context";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "gasUseWithoutPost";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "maxFeePerGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxPriorityFeePerGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "transactionCalldataGasUsed";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "relayWorker";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "paymaster";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "forwarder";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "paymasterData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "clientId";
                readonly type: "uint256";
            }];
            readonly internalType: "struct GsnTypes.RelayData";
            readonly name: "relayData";
            readonly type: "tuple";
        }];
        readonly name: "postRelayedCall";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "versionPaymaster";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IPaymasterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IPaymaster;
}
