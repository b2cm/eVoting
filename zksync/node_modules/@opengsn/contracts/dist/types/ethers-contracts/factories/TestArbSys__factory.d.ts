import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestArbSys, TestArbSysInterface } from "../TestArbSys";
type TestArbSysConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestArbSys__factory extends ContractFactory {
    constructor(...args: TestArbSysConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<TestArbSys>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): TestArbSys;
    connect(signer: Signer): TestArbSys__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5060d08061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a3b1b31d146037578063a94597ff14604f575b600080fd5b603d6055565b60405190815260200160405180910390f35b603d6065565b60006060436011606e565b905090565b60005a60609060645b6000816000190483118215151615609557634e487b7160e01b600052601160045260246000fd5b50029056fea2646970667358221220e3d1eb62f861bbe8e27cf2f09f061195d41d22406455e0c09f49cc01e4dafc5a64736f6c63430008070033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "arbBlockNumber";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getStorageGasAvailable";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): TestArbSysInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestArbSys;
}
export {};
