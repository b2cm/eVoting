{"ast":null,"code":"// Generated by psc version 0.9.3\n\"use strict\";\n\nvar Control_Category = require(\"../Control.Category\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Data_Semigroup = require(\"../Data.Semigroup\");\nvar Extend = function (__superclass_Data$dotFunctor$dotFunctor_0, extend) {\n  this[\"__superclass_Data.Functor.Functor_0\"] = __superclass_Data$dotFunctor$dotFunctor_0;\n  this.extend = extend;\n};\nvar extendFn = function (dictSemigroup) {\n  return new Extend(function () {\n    return Data_Functor.functorFn;\n  }, function (f) {\n    return function (g) {\n      return function (w) {\n        return f(function (w$prime) {\n          return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));\n        });\n      };\n    };\n  });\n};\nvar extend = function (dict) {\n  return dict.extend;\n};\nvar extendFlipped = function (dictExtend) {\n  return function (w) {\n    return function (f) {\n      return extend(dictExtend)(f)(w);\n    };\n  };\n};\nvar duplicate = function (dictExtend) {\n  return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));\n};\nvar composeCoKleisliFlipped = function (dictExtend) {\n  return function (f) {\n    return function (g) {\n      return function (w) {\n        return f(extend(dictExtend)(g)(w));\n      };\n    };\n  };\n};\nvar composeCoKleisli = function (dictExtend) {\n  return function (f) {\n    return function (g) {\n      return function (w) {\n        return g(extend(dictExtend)(f)(w));\n      };\n    };\n  };\n};\nmodule.exports = {\n  Extend: Extend,\n  composeCoKleisli: composeCoKleisli,\n  composeCoKleisliFlipped: composeCoKleisliFlipped,\n  duplicate: duplicate,\n  extend: extend,\n  extendFlipped: extendFlipped,\n  extendFn: extendFn\n};","map":{"version":3,"names":["Control_Category","require","Data_Functor","Data_Semigroup","Extend","__superclass_Data$dotFunctor$dotFunctor_0","extend","extendFn","dictSemigroup","functorFn","f","g","w","w$prime","append","dict","extendFlipped","dictExtend","duplicate","id","categoryFn","composeCoKleisliFlipped","composeCoKleisli","module","exports"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/lib/Control.Extend/index.js"],"sourcesContent":["// Generated by psc version 0.9.3\n\"use strict\";\nvar Control_Category = require(\"../Control.Category\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Data_Semigroup = require(\"../Data.Semigroup\");\nvar Extend = function (__superclass_Data$dotFunctor$dotFunctor_0, extend) {\n    this[\"__superclass_Data.Functor.Functor_0\"] = __superclass_Data$dotFunctor$dotFunctor_0;\n    this.extend = extend;\n};\nvar extendFn = function (dictSemigroup) {\n    return new Extend(function () {\n        return Data_Functor.functorFn;\n    }, function (f) {\n        return function (g) {\n            return function (w) {\n                return f(function (w$prime) {\n                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));\n                });\n            };\n        };\n    });\n};\nvar extend = function (dict) {\n    return dict.extend;\n};\nvar extendFlipped = function (dictExtend) {\n    return function (w) {\n        return function (f) {\n            return extend(dictExtend)(f)(w);\n        };\n    };\n};\nvar duplicate = function (dictExtend) {\n    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));\n};\nvar composeCoKleisliFlipped = function (dictExtend) {\n    return function (f) {\n        return function (g) {\n            return function (w) {\n                return f(extend(dictExtend)(g)(w));\n            };\n        };\n    };\n};\nvar composeCoKleisli = function (dictExtend) {\n    return function (f) {\n        return function (g) {\n            return function (w) {\n                return g(extend(dictExtend)(f)(w));\n            };\n        };\n    };\n};\nmodule.exports = {\n    Extend: Extend,\n    composeCoKleisli: composeCoKleisli,\n    composeCoKleisliFlipped: composeCoKleisliFlipped,\n    duplicate: duplicate,\n    extend: extend,\n    extendFlipped: extendFlipped,\n    extendFn: extendFn\n};\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACrD,IAAIC,YAAY,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC7C,IAAIE,cAAc,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AACjD,IAAIG,MAAM,GAAG,SAAAA,CAAUC,yCAAyC,EAAEC,MAAM,EAAE;EACtE,IAAI,CAAC,qCAAqC,CAAC,GAAGD,yCAAyC;EACvF,IAAI,CAACC,MAAM,GAAGA,MAAM;AACxB,CAAC;AACD,IAAIC,QAAQ,GAAG,SAAAA,CAAUC,aAAa,EAAE;EACpC,OAAO,IAAIJ,MAAM,CAAC,YAAY;IAC1B,OAAOF,YAAY,CAACO,SAAS;EACjC,CAAC,EAAE,UAAUC,CAAC,EAAE;IACZ,OAAO,UAAUC,CAAC,EAAE;MAChB,OAAO,UAAUC,CAAC,EAAE;QAChB,OAAOF,CAAC,CAAC,UAAUG,OAAO,EAAE;UACxB,OAAOF,CAAC,CAACR,cAAc,CAACW,MAAM,CAACN,aAAa,CAAC,CAACI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QAC9D,CAAC,CAAC;MACN,CAAC;IACL,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AACD,IAAIP,MAAM,GAAG,SAAAA,CAAUS,IAAI,EAAE;EACzB,OAAOA,IAAI,CAACT,MAAM;AACtB,CAAC;AACD,IAAIU,aAAa,GAAG,SAAAA,CAAUC,UAAU,EAAE;EACtC,OAAO,UAAUL,CAAC,EAAE;IAChB,OAAO,UAAUF,CAAC,EAAE;MAChB,OAAOJ,MAAM,CAACW,UAAU,CAAC,CAACP,CAAC,CAAC,CAACE,CAAC,CAAC;IACnC,CAAC;EACL,CAAC;AACL,CAAC;AACD,IAAIM,SAAS,GAAG,SAAAA,CAAUD,UAAU,EAAE;EAClC,OAAOX,MAAM,CAACW,UAAU,CAAC,CAACjB,gBAAgB,CAACmB,EAAE,CAACnB,gBAAgB,CAACoB,UAAU,CAAC,CAAC;AAC/E,CAAC;AACD,IAAIC,uBAAuB,GAAG,SAAAA,CAAUJ,UAAU,EAAE;EAChD,OAAO,UAAUP,CAAC,EAAE;IAChB,OAAO,UAAUC,CAAC,EAAE;MAChB,OAAO,UAAUC,CAAC,EAAE;QAChB,OAAOF,CAAC,CAACJ,MAAM,CAACW,UAAU,CAAC,CAACN,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;MACtC,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC;AACD,IAAIU,gBAAgB,GAAG,SAAAA,CAAUL,UAAU,EAAE;EACzC,OAAO,UAAUP,CAAC,EAAE;IAChB,OAAO,UAAUC,CAAC,EAAE;MAChB,OAAO,UAAUC,CAAC,EAAE;QAChB,OAAOD,CAAC,CAACL,MAAM,CAACW,UAAU,CAAC,CAACP,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC;MACtC,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC;AACDW,MAAM,CAACC,OAAO,GAAG;EACbpB,MAAM,EAAEA,MAAM;EACdkB,gBAAgB,EAAEA,gBAAgB;EAClCD,uBAAuB,EAAEA,uBAAuB;EAChDH,SAAS,EAAEA,SAAS;EACpBZ,MAAM,EAAEA,MAAM;EACdU,aAAa,EAAEA,aAAa;EAC5BT,QAAQ,EAAEA;AACd,CAAC"},"metadata":{},"sourceType":"script"}