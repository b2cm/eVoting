{"ast":null,"code":"import { __read } from \"tslib\";\nimport { useEffect, useState, useCallback } from 'react';\nimport useConstant from 'use-constant';\nimport { BehaviorSubject, Subject } from 'rxjs';\nexport function useEventCallback(callback, initialState, inputs) {\n  var initialValue = typeof initialState !== 'undefined' ? initialState : null;\n  var _a = __read(useState(initialValue), 2),\n    state = _a[0],\n    setState = _a[1];\n  var event$ = useConstant(function () {\n    return new Subject();\n  });\n  var state$ = useConstant(function () {\n    return new BehaviorSubject(initialValue);\n  });\n  var inputs$ = useConstant(function () {\n    return new BehaviorSubject(typeof inputs === 'undefined' ? null : inputs);\n  });\n  function eventCallback(e) {\n    return event$.next(e);\n  }\n  var returnedCallback = useCallback(eventCallback, []);\n  useEffect(function () {\n    inputs$.next(inputs);\n  }, inputs || []);\n  useEffect(function () {\n    setState(initialValue);\n    var value$;\n    if (!inputs) {\n      value$ = callback(event$, state$);\n    } else {\n      value$ = callback(event$, state$, inputs$);\n    }\n    var subscription = value$.subscribe(function (value) {\n      state$.next(value);\n      setState(value);\n    });\n    return function () {\n      subscription.unsubscribe();\n      state$.complete();\n      inputs$.complete();\n      event$.complete();\n    };\n  }, []); // immutable forever\n  return [returnedCallback, state];\n}","map":{"version":3,"sources":["../../src/use-event-callback.ts"],"names":[],"mappings":";AAAA,SAAS,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,OAAO;AACxD,OAAO,WAAW,MAAM,cAAc;AACtC,SAAqB,eAAe,EAAE,OAAO,QAAQ,MAAM;AAsC3D,OAAM,SAAU,gBAAgB,CAC9B,QAAkD,EAClD,YAAoB,EACpB,MAA8B,EAAA;EAE9B,IAAM,YAAY,GAAI,OAAO,YAAY,KAAK,WAAW,GAAG,YAAY,GAAG,IAA0B;EAC/F,IAAA,EAAA,GAAA,MAAA,CAAoB,QAAQ,CAAC,YAAY,CAAC,EAAA,CAAA,CAAA;IAAzC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA;IAAE,QAAQ,GAAA,EAAA,CAAA,CAAA,CAA0B;EAChD,IAAM,MAAM,GAAG,WAAW,CAAC,YAAA;IAAM,OAAA,IAAI,OAAO,CAAA,CAAc;EAAzB,CAAyB,CAAC;EAC3D,IAAM,MAAM,GAAG,WAAW,CAAC,YAAA;IAAM,OAAA,IAAI,eAAe,CAAe,YAAY,CAAC;EAA/C,CAA+C,CAAC;EACjF,IAAM,OAAO,GAAG,WAAW,CACzB,YAAA;IAAM,OAAA,IAAI,eAAe,CAA+B,OAAO,MAAM,KAAK,WAAW,GAAG,IAAI,GAAG,MAAM,CAAC;EAAhG,CAAgG,CACvG;EAED,SAAS,aAAa,CAAC,CAAa,EAAA;IAClC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB;EACA,IAAM,gBAAgB,GAAG,WAAW,CAAC,aAAa,EAAE,EAAE,CAAC;EAEvD,SAAS,CAAC,YAAA;IACR,OAAO,CAAC,IAAI,CAAC,MAAO,CAAC;EACvB,CAAC,EAAE,MAAM,IAAI,EAAE,CAAC;EAEhB,SAAS,CAAC,YAAA;IACR,QAAQ,CAAC,YAAY,CAAC;IACtB,IAAI,MAAyB;IAE7B,IAAI,CAAC,MAAM,EAAE;MACX,MAAM,GAAI,QAAmD,CAAC,MAAM,EAAE,MAA2B,CAAC;KACnG,MAAM;MACL,MAAM,GAAI,QAAgB,CAAC,MAAM,EAAE,MAA2B,EAAE,OAA6B,CAAC;IAC/F;IACD,IAAM,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK,EAAA;MAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;MAClB,QAAQ,CAAC,KAA0B,CAAC;IACtC,CAAC,CAAC;IACF,OAAO,YAAA;MACL,YAAY,CAAC,WAAW,CAAA,CAAE;MAC1B,MAAM,CAAC,QAAQ,CAAA,CAAE;MACjB,OAAO,CAAC,QAAQ,CAAA,CAAE;MAClB,MAAM,CAAC,QAAQ,CAAA,CAAE;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAA,CAAC;EAEP,OAAO,CAAC,gBAAqD,EAAE,KAAK,CAAC;AACvE","sourceRoot":"","sourcesContent":["import { __read } from \"tslib\";\nimport { useEffect, useState, useCallback } from 'react';\nimport useConstant from 'use-constant';\nimport { BehaviorSubject, Subject } from 'rxjs';\nexport function useEventCallback(callback, initialState, inputs) {\n    var initialValue = (typeof initialState !== 'undefined' ? initialState : null);\n    var _a = __read(useState(initialValue), 2), state = _a[0], setState = _a[1];\n    var event$ = useConstant(function () { return new Subject(); });\n    var state$ = useConstant(function () { return new BehaviorSubject(initialValue); });\n    var inputs$ = useConstant(function () { return new BehaviorSubject(typeof inputs === 'undefined' ? null : inputs); });\n    function eventCallback(e) {\n        return event$.next(e);\n    }\n    var returnedCallback = useCallback(eventCallback, []);\n    useEffect(function () {\n        inputs$.next(inputs);\n    }, inputs || []);\n    useEffect(function () {\n        setState(initialValue);\n        var value$;\n        if (!inputs) {\n            value$ = callback(event$, state$);\n        }\n        else {\n            value$ = callback(event$, state$, inputs$);\n        }\n        var subscription = value$.subscribe(function (value) {\n            state$.next(value);\n            setState(value);\n        });\n        return function () {\n            subscription.unsubscribe();\n            state$.complete();\n            inputs$.complete();\n            event$.complete();\n        };\n    }, []); // immutable forever\n    return [returnedCallback, state];\n}\n//# sourceMappingURL=use-event-callback.js.map"]},"metadata":{},"sourceType":"module"}