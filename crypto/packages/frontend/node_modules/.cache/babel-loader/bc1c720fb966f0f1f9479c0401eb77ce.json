{"ast":null,"code":"// Generated by psc version 0.9.3\n\"use strict\";\n\nvar Control_Alt = require(\"../Control.Alt\");\nvar Control_Applicative = require(\"../Control.Applicative\");\nvar Control_Apply = require(\"../Control.Apply\");\nvar Control_Bind = require(\"../Control.Bind\");\nvar Control_Comonad = require(\"../Control.Comonad\");\nvar Control_Extend = require(\"../Control.Extend\");\nvar Control_Monad = require(\"../Control.Monad\");\nvar Data_BooleanAlgebra = require(\"../Data.BooleanAlgebra\");\nvar Data_Bounded = require(\"../Data.Bounded\");\nvar Data_CommutativeRing = require(\"../Data.CommutativeRing\");\nvar Data_Eq = require(\"../Data.Eq\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing\");\nvar Data_Field = require(\"../Data.Field\");\nvar Data_Foldable = require(\"../Data.Foldable\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Data_Functor_Invariant = require(\"../Data.Functor.Invariant\");\nvar Data_HeytingAlgebra = require(\"../Data.HeytingAlgebra\");\nvar Data_Monoid = require(\"../Data.Monoid\");\nvar Data_Ord = require(\"../Data.Ord\");\nvar Data_Ring = require(\"../Data.Ring\");\nvar Data_Semigroup = require(\"../Data.Semigroup\");\nvar Data_Semiring = require(\"../Data.Semiring\");\nvar Data_Show = require(\"../Data.Show\");\nvar Data_Traversable = require(\"../Data.Traversable\");\nvar Identity = function (x) {\n  return x;\n};\nvar showIdentity = function (dictShow) {\n  return new Data_Show.Show(function (v) {\n    return \"(Identity \" + (Data_Show.show(dictShow)(v) + \")\");\n  });\n};\nvar semiringIdentity = function (dictSemiring) {\n  return new Data_Semiring.Semiring(function (v) {\n    return function (v1) {\n      return Data_Semiring.add(dictSemiring)(v)(v1);\n    };\n  }, function (v) {\n    return function (v1) {\n      return Data_Semiring.mul(dictSemiring)(v)(v1);\n    };\n  }, Data_Semiring.one(dictSemiring), Data_Semiring.zero(dictSemiring));\n};\nvar semigroupIdenity = function (dictSemigroup) {\n  return new Data_Semigroup.Semigroup(function (v) {\n    return function (v1) {\n      return Data_Semigroup.append(dictSemigroup)(v)(v1);\n    };\n  });\n};\nvar runIdentity = function (v) {\n  return v;\n};\nvar ringIdentity = function (dictRing) {\n  return new Data_Ring.Ring(function () {\n    return semiringIdentity(dictRing[\"__superclass_Data.Semiring.Semiring_0\"]());\n  }, function (v) {\n    return function (v1) {\n      return Data_Ring.sub(dictRing)(v)(v1);\n    };\n  });\n};\nvar monoidIdentity = function (dictMonoid) {\n  return new Data_Monoid.Monoid(function () {\n    return semigroupIdenity(dictMonoid[\"__superclass_Data.Semigroup.Semigroup_0\"]());\n  }, Data_Monoid.mempty(dictMonoid));\n};\nvar heytingAlgebraIdentity = function (dictHeytingAlgebra) {\n  return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {\n    return function (v1) {\n      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);\n    };\n  }, function (v) {\n    return function (v1) {\n      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);\n    };\n  }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), function (v) {\n    return function (v1) {\n      return Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v)(v1);\n    };\n  }, function (v) {\n    return Data_HeytingAlgebra.not(dictHeytingAlgebra)(v);\n  }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));\n};\nvar functorIdentity = new Data_Functor.Functor(function (f) {\n  return function (v) {\n    return f(v);\n  };\n});\nvar invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));\nvar foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {\n  return function (f) {\n    return function (v) {\n      return f(v);\n    };\n  };\n}, function (f) {\n  return function (z) {\n    return function (v) {\n      return f(z)(v);\n    };\n  };\n}, function (f) {\n  return function (z) {\n    return function (v) {\n      return f(v)(z);\n    };\n  };\n});\nvar traversableIdentity = new Data_Traversable.Traversable(function () {\n  return foldableIdentity;\n}, function () {\n  return functorIdentity;\n}, function (dictApplicative) {\n  return function (v) {\n    return Data_Functor.map(dictApplicative[\"__superclass_Control.Apply.Apply_0\"]()[\"__superclass_Data.Functor.Functor_0\"]())(Identity)(v);\n  };\n}, function (dictApplicative) {\n  return function (f) {\n    return function (v) {\n      return Data_Functor.map(dictApplicative[\"__superclass_Control.Apply.Apply_0\"]()[\"__superclass_Data.Functor.Functor_0\"]())(Identity)(f(v));\n    };\n  };\n});\nvar extendIdentity = new Control_Extend.Extend(function () {\n  return functorIdentity;\n}, function (f) {\n  return function (m) {\n    return f(m);\n  };\n});\nvar eqIdentity = function (dictEq) {\n  return new Data_Eq.Eq(function (v) {\n    return function (v1) {\n      return Data_Eq.eq(dictEq)(v)(v1);\n    };\n  });\n};\nvar ordIdentity = function (dictOrd) {\n  return new Data_Ord.Ord(function () {\n    return eqIdentity(dictOrd[\"__superclass_Data.Eq.Eq_0\"]());\n  }, function (v) {\n    return function (v1) {\n      return Data_Ord.compare(dictOrd)(v)(v1);\n    };\n  });\n};\nvar comonadIdentity = new Control_Comonad.Comonad(function () {\n  return extendIdentity;\n}, function (v) {\n  return v;\n});\nvar commutativeRingIdentity = function (dictCommutativeRing) {\n  return new Data_CommutativeRing.CommutativeRing(function () {\n    return ringIdentity(dictCommutativeRing[\"__superclass_Data.Ring.Ring_0\"]());\n  });\n};\nvar euclideanRingIdentity = function (dictEuclideanRing) {\n  return new Data_EuclideanRing.EuclideanRing(function () {\n    return commutativeRingIdentity(dictEuclideanRing[\"__superclass_Data.CommutativeRing.CommutativeRing_0\"]());\n  }, function (v) {\n    return Data_EuclideanRing.degree(dictEuclideanRing)(v);\n  }, function (v) {\n    return function (v1) {\n      return Data_EuclideanRing.div(dictEuclideanRing)(v)(v1);\n    };\n  }, function (v) {\n    return function (v1) {\n      return Data_EuclideanRing.mod(dictEuclideanRing)(v)(v1);\n    };\n  });\n};\nvar fieldIdentity = function (dictField) {\n  return new Data_Field.Field(function () {\n    return euclideanRingIdentity(dictField[\"__superclass_Data.EuclideanRing.EuclideanRing_0\"]());\n  });\n};\nvar boundedIdentity = function (dictBounded) {\n  return new Data_Bounded.Bounded(function () {\n    return ordIdentity(dictBounded[\"__superclass_Data.Ord.Ord_0\"]());\n  }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));\n};\nvar booleanAlgebraIdentity = function (dictBooleanAlgebra) {\n  return new Data_BooleanAlgebra.BooleanAlgebra(function () {\n    return heytingAlgebraIdentity(dictBooleanAlgebra[\"__superclass_Data.HeytingAlgebra.HeytingAlgebra_0\"]());\n  });\n};\nvar applyIdentity = new Control_Apply.Apply(function () {\n  return functorIdentity;\n}, function (v) {\n  return function (v1) {\n    return v(v1);\n  };\n});\nvar bindIdentity = new Control_Bind.Bind(function () {\n  return applyIdentity;\n}, function (v) {\n  return function (f) {\n    return f(v);\n  };\n});\nvar applicativeIdentity = new Control_Applicative.Applicative(function () {\n  return applyIdentity;\n}, Identity);\nvar monadIdentity = new Control_Monad.Monad(function () {\n  return applicativeIdentity;\n}, function () {\n  return bindIdentity;\n});\nvar altIdentity = new Control_Alt.Alt(function () {\n  return functorIdentity;\n}, function (x) {\n  return function (v) {\n    return x;\n  };\n});\nmodule.exports = {\n  Identity: Identity,\n  runIdentity: runIdentity,\n  eqIdentity: eqIdentity,\n  ordIdentity: ordIdentity,\n  boundedIdentity: boundedIdentity,\n  heytingAlgebraIdentity: heytingAlgebraIdentity,\n  booleanAlgebraIdentity: booleanAlgebraIdentity,\n  semigroupIdenity: semigroupIdenity,\n  monoidIdentity: monoidIdentity,\n  semiringIdentity: semiringIdentity,\n  euclideanRingIdentity: euclideanRingIdentity,\n  ringIdentity: ringIdentity,\n  commutativeRingIdentity: commutativeRingIdentity,\n  fieldIdentity: fieldIdentity,\n  showIdentity: showIdentity,\n  functorIdentity: functorIdentity,\n  invariantIdentity: invariantIdentity,\n  altIdentity: altIdentity,\n  applyIdentity: applyIdentity,\n  applicativeIdentity: applicativeIdentity,\n  bindIdentity: bindIdentity,\n  monadIdentity: monadIdentity,\n  extendIdentity: extendIdentity,\n  comonadIdentity: comonadIdentity,\n  foldableIdentity: foldableIdentity,\n  traversableIdentity: traversableIdentity\n};","map":{"version":3,"names":["Control_Alt","require","Control_Applicative","Control_Apply","Control_Bind","Control_Comonad","Control_Extend","Control_Monad","Data_BooleanAlgebra","Data_Bounded","Data_CommutativeRing","Data_Eq","Data_EuclideanRing","Data_Field","Data_Foldable","Data_Functor","Data_Functor_Invariant","Data_HeytingAlgebra","Data_Monoid","Data_Ord","Data_Ring","Data_Semigroup","Data_Semiring","Data_Show","Data_Traversable","Identity","x","showIdentity","dictShow","Show","v","show","semiringIdentity","dictSemiring","Semiring","v1","add","mul","one","zero","semigroupIdenity","dictSemigroup","Semigroup","append","runIdentity","ringIdentity","dictRing","Ring","sub","monoidIdentity","dictMonoid","Monoid","mempty","heytingAlgebraIdentity","dictHeytingAlgebra","HeytingAlgebra","conj","disj","ff","implies","not","tt","functorIdentity","Functor","f","invariantIdentity","Invariant","imapF","foldableIdentity","Foldable","z","traversableIdentity","Traversable","dictApplicative","map","extendIdentity","Extend","m","eqIdentity","dictEq","Eq","eq","ordIdentity","dictOrd","Ord","compare","comonadIdentity","Comonad","commutativeRingIdentity","dictCommutativeRing","CommutativeRing","euclideanRingIdentity","dictEuclideanRing","EuclideanRing","degree","div","mod","fieldIdentity","dictField","Field","boundedIdentity","dictBounded","Bounded","bottom","top","booleanAlgebraIdentity","dictBooleanAlgebra","BooleanAlgebra","applyIdentity","Apply","bindIdentity","Bind","applicativeIdentity","Applicative","monadIdentity","Monad","altIdentity","Alt","module","exports"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/lib/Data.Identity/index.js"],"sourcesContent":["// Generated by psc version 0.9.3\n\"use strict\";\nvar Control_Alt = require(\"../Control.Alt\");\nvar Control_Applicative = require(\"../Control.Applicative\");\nvar Control_Apply = require(\"../Control.Apply\");\nvar Control_Bind = require(\"../Control.Bind\");\nvar Control_Comonad = require(\"../Control.Comonad\");\nvar Control_Extend = require(\"../Control.Extend\");\nvar Control_Monad = require(\"../Control.Monad\");\nvar Data_BooleanAlgebra = require(\"../Data.BooleanAlgebra\");\nvar Data_Bounded = require(\"../Data.Bounded\");\nvar Data_CommutativeRing = require(\"../Data.CommutativeRing\");\nvar Data_Eq = require(\"../Data.Eq\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing\");\nvar Data_Field = require(\"../Data.Field\");\nvar Data_Foldable = require(\"../Data.Foldable\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Data_Functor_Invariant = require(\"../Data.Functor.Invariant\");\nvar Data_HeytingAlgebra = require(\"../Data.HeytingAlgebra\");\nvar Data_Monoid = require(\"../Data.Monoid\");\nvar Data_Ord = require(\"../Data.Ord\");\nvar Data_Ring = require(\"../Data.Ring\");\nvar Data_Semigroup = require(\"../Data.Semigroup\");\nvar Data_Semiring = require(\"../Data.Semiring\");\nvar Data_Show = require(\"../Data.Show\");\nvar Data_Traversable = require(\"../Data.Traversable\");\nvar Identity = function (x) {\n    return x;\n};\nvar showIdentity = function (dictShow) {\n    return new Data_Show.Show(function (v) {\n        return \"(Identity \" + (Data_Show.show(dictShow)(v) + \")\");\n    });\n};\nvar semiringIdentity = function (dictSemiring) {\n    return new Data_Semiring.Semiring(function (v) {\n        return function (v1) {\n            return Data_Semiring.add(dictSemiring)(v)(v1);\n        };\n    }, function (v) {\n        return function (v1) {\n            return Data_Semiring.mul(dictSemiring)(v)(v1);\n        };\n    }, Data_Semiring.one(dictSemiring), Data_Semiring.zero(dictSemiring));\n};\nvar semigroupIdenity = function (dictSemigroup) {\n    return new Data_Semigroup.Semigroup(function (v) {\n        return function (v1) {\n            return Data_Semigroup.append(dictSemigroup)(v)(v1);\n        };\n    });\n};\nvar runIdentity = function (v) {\n    return v;\n};\nvar ringIdentity = function (dictRing) {\n    return new Data_Ring.Ring(function () {\n        return semiringIdentity(dictRing[\"__superclass_Data.Semiring.Semiring_0\"]());\n    }, function (v) {\n        return function (v1) {\n            return Data_Ring.sub(dictRing)(v)(v1);\n        };\n    });\n};\nvar monoidIdentity = function (dictMonoid) {\n    return new Data_Monoid.Monoid(function () {\n        return semigroupIdenity(dictMonoid[\"__superclass_Data.Semigroup.Semigroup_0\"]());\n    }, Data_Monoid.mempty(dictMonoid));\n};\nvar heytingAlgebraIdentity = function (dictHeytingAlgebra) {\n    return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {\n        return function (v1) {\n            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);\n        };\n    }, function (v) {\n        return function (v1) {\n            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);\n        };\n    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), function (v) {\n        return function (v1) {\n            return Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v)(v1);\n        };\n    }, function (v) {\n        return Data_HeytingAlgebra.not(dictHeytingAlgebra)(v);\n    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));\n};\nvar functorIdentity = new Data_Functor.Functor(function (f) {\n    return function (v) {\n        return f(v);\n    };\n});\nvar invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));\nvar foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {\n    return function (f) {\n        return function (v) {\n            return f(v);\n        };\n    };\n}, function (f) {\n    return function (z) {\n        return function (v) {\n            return f(z)(v);\n        };\n    };\n}, function (f) {\n    return function (z) {\n        return function (v) {\n            return f(v)(z);\n        };\n    };\n});\nvar traversableIdentity = new Data_Traversable.Traversable(function () {\n    return foldableIdentity;\n}, function () {\n    return functorIdentity;\n}, function (dictApplicative) {\n    return function (v) {\n        return Data_Functor.map((dictApplicative[\"__superclass_Control.Apply.Apply_0\"]())[\"__superclass_Data.Functor.Functor_0\"]())(Identity)(v);\n    };\n}, function (dictApplicative) {\n    return function (f) {\n        return function (v) {\n            return Data_Functor.map((dictApplicative[\"__superclass_Control.Apply.Apply_0\"]())[\"__superclass_Data.Functor.Functor_0\"]())(Identity)(f(v));\n        };\n    };\n});\nvar extendIdentity = new Control_Extend.Extend(function () {\n    return functorIdentity;\n}, function (f) {\n    return function (m) {\n        return f(m);\n    };\n});\nvar eqIdentity = function (dictEq) {\n    return new Data_Eq.Eq(function (v) {\n        return function (v1) {\n            return Data_Eq.eq(dictEq)(v)(v1);\n        };\n    });\n};\nvar ordIdentity = function (dictOrd) {\n    return new Data_Ord.Ord(function () {\n        return eqIdentity(dictOrd[\"__superclass_Data.Eq.Eq_0\"]());\n    }, function (v) {\n        return function (v1) {\n            return Data_Ord.compare(dictOrd)(v)(v1);\n        };\n    });\n};\nvar comonadIdentity = new Control_Comonad.Comonad(function () {\n    return extendIdentity;\n}, function (v) {\n    return v;\n});\nvar commutativeRingIdentity = function (dictCommutativeRing) {\n    return new Data_CommutativeRing.CommutativeRing(function () {\n        return ringIdentity(dictCommutativeRing[\"__superclass_Data.Ring.Ring_0\"]());\n    });\n};\nvar euclideanRingIdentity = function (dictEuclideanRing) {\n    return new Data_EuclideanRing.EuclideanRing(function () {\n        return commutativeRingIdentity(dictEuclideanRing[\"__superclass_Data.CommutativeRing.CommutativeRing_0\"]());\n    }, function (v) {\n        return Data_EuclideanRing.degree(dictEuclideanRing)(v);\n    }, function (v) {\n        return function (v1) {\n            return Data_EuclideanRing.div(dictEuclideanRing)(v)(v1);\n        };\n    }, function (v) {\n        return function (v1) {\n            return Data_EuclideanRing.mod(dictEuclideanRing)(v)(v1);\n        };\n    });\n};\nvar fieldIdentity = function (dictField) {\n    return new Data_Field.Field(function () {\n        return euclideanRingIdentity(dictField[\"__superclass_Data.EuclideanRing.EuclideanRing_0\"]());\n    });\n};\nvar boundedIdentity = function (dictBounded) {\n    return new Data_Bounded.Bounded(function () {\n        return ordIdentity(dictBounded[\"__superclass_Data.Ord.Ord_0\"]());\n    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));\n};\nvar booleanAlgebraIdentity = function (dictBooleanAlgebra) {\n    return new Data_BooleanAlgebra.BooleanAlgebra(function () {\n        return heytingAlgebraIdentity(dictBooleanAlgebra[\"__superclass_Data.HeytingAlgebra.HeytingAlgebra_0\"]());\n    });\n};\nvar applyIdentity = new Control_Apply.Apply(function () {\n    return functorIdentity;\n}, function (v) {\n    return function (v1) {\n        return v(v1);\n    };\n});\nvar bindIdentity = new Control_Bind.Bind(function () {\n    return applyIdentity;\n}, function (v) {\n    return function (f) {\n        return f(v);\n    };\n});\nvar applicativeIdentity = new Control_Applicative.Applicative(function () {\n    return applyIdentity;\n}, Identity);\nvar monadIdentity = new Control_Monad.Monad(function () {\n    return applicativeIdentity;\n}, function () {\n    return bindIdentity;\n});\nvar altIdentity = new Control_Alt.Alt(function () {\n    return functorIdentity;\n}, function (x) {\n    return function (v) {\n        return x;\n    };\n});\nmodule.exports = {\n    Identity: Identity,\n    runIdentity: runIdentity,\n    eqIdentity: eqIdentity,\n    ordIdentity: ordIdentity,\n    boundedIdentity: boundedIdentity,\n    heytingAlgebraIdentity: heytingAlgebraIdentity,\n    booleanAlgebraIdentity: booleanAlgebraIdentity,\n    semigroupIdenity: semigroupIdenity,\n    monoidIdentity: monoidIdentity,\n    semiringIdentity: semiringIdentity,\n    euclideanRingIdentity: euclideanRingIdentity,\n    ringIdentity: ringIdentity,\n    commutativeRingIdentity: commutativeRingIdentity,\n    fieldIdentity: fieldIdentity,\n    showIdentity: showIdentity,\n    functorIdentity: functorIdentity,\n    invariantIdentity: invariantIdentity,\n    altIdentity: altIdentity,\n    applyIdentity: applyIdentity,\n    applicativeIdentity: applicativeIdentity,\n    bindIdentity: bindIdentity,\n    monadIdentity: monadIdentity,\n    extendIdentity: extendIdentity,\n    comonadIdentity: comonadIdentity,\n    foldableIdentity: foldableIdentity,\n    traversableIdentity: traversableIdentity\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}