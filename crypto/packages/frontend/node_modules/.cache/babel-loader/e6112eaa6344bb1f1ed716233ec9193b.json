{"ast":null,"code":"import axios from \"axios\";\nimport { BehaviorSubject, combineLatest, concatMap, filter, first, from, map, pairwise, ReplaySubject, scan, shareReplay, startWith, switchMap, withLatestFrom } from \"rxjs\";\nimport { BACKEND_URL } from \"./api\";\nimport { startGeneration, decrypt, verifyMembershipZkp, combineCiphertext } from \"pallier\";\nimport { createParty } from \"./party\";\nimport { createSignaller } from \"./signalling\";\nimport { Signature, verifySignature } from \"lrs\";\nimport BigInteger from \"big-integer\";\nimport VrfGenerator from \"../Vrf/vrf\";\nconst keyLength = 80n;\nconst threshold = 2;\nexport class Session {\n  get userId$() {\n    return this.signaller.userId$;\n  }\n  get isReady() {\n    return this._ready.getValue();\n  }\n  get vrf() {\n    return this._vrf;\n  }\n  get generationInProgress() {\n    return this._generationInProgress;\n  }\n  constructor(signaller, sessionId) {\n    this.signaller = signaller;\n    this.sessionId = sessionId;\n    this._ready = new BehaviorSubject(false);\n    this._generationInProgress = false;\n    this._vrf = void 0;\n    this.partiesChange$ = this.signaller.parties$.pipe(startWith({\n      parties: []\n    }), pairwise(), switchMap(_ref => {\n      let [{\n        parties: currentParties\n      }, {\n        parties: serverParties\n      }] = _ref;\n      const removed = currentParties.filter(p => {\n        return !serverParties.some(sP => sP.id === p.id);\n      }).map(party => ({\n        act: \"rem\",\n        party\n      }));\n      const added = serverParties.filter(sParty => !currentParties.some(cParty => cParty.id === sParty.id)).map(party => ({\n        act: \"add\",\n        party\n      }));\n      return from([...removed, ...added]);\n    }));\n    this.parties$ = this.partiesChange$.pipe(withLatestFrom(this.signaller.userId$), filter(_ref2 => {\n      let [{\n        party\n      }, userId] = _ref2;\n      return party.id !== userId;\n    }), concatMap(async _ref3 => {\n      let [party, userId] = _ref3;\n      if (party.act === \"add\") {\n        const n = await createParty(userId, party.party.id, this.signaller);\n        return {\n          party: n,\n          act: party.act\n        };\n      } else {\n        return {\n          partyId: party.party.id,\n          act: party.act\n        };\n      }\n    }), scan((parties, nParty) => {\n      if (nParty.act === \"add\") {\n        nParty.party.sendReady(this._ready.getValue());\n        return [...parties, nParty.party];\n      } else {\n        return parties.filter(p => {\n          const toRemove = p.partyId !== nParty.partyId;\n          if (!toRemove) {\n            p.cleanup();\n          }\n          return toRemove;\n        });\n      }\n    }, []), shareReplay({\n      bufferSize: 1,\n      refCount: false\n    }));\n    this.allReady$ = this.parties$.pipe(switchMap(parties => combineLatest([combineLatest(parties.map(p => p.ready$.pipe(map(ready => ({\n      ready,\n      party: p\n    }))))), this.signaller.userId$, this._ready])), map(_ref4 => {\n      let [states, userId] = _ref4;\n      if (this.isReady && states.every(s => s.ready)) {\n        if (!this.generationInProgress) {\n          this.performAction(userId, states.map(p => p.party));\n          this._generationInProgress = true;\n          console.log(\"starting generation\");\n        }\n        return true;\n      }\n      return false;\n    }), filter(val => val), first()).subscribe();\n    this._vrf = VrfGenerator();\n  }\n  ready(ready) {\n    this._ready.next(ready);\n    this.parties$.pipe(first()).subscribe(parties => parties.forEach(p => p.sendReady(ready, this.vrf)));\n  }\n  cleanup() {\n    this.signaller.cleanup();\n    this.parties$.pipe(first()).subscribe(ps => {\n      ps.forEach(p => p.cleanup());\n    });\n  }\n}\nexport class EncryptSession extends Session {\n  constructor() {\n    super(...arguments);\n    this.generatedKeys$ = new ReplaySubject();\n  }\n  async performAction(userId, parties) {\n    startGeneration(userId, parties, keyLength, threshold).then(data => {\n      this.generatedKeys$.next(data);\n      this.saveKeys(data, userId);\n      window.localStorage.setItem(`parties:${this.sessionId}`, JSON.stringify(data.allParties));\n      console.log(\"finished generation\" + data.allParties);\n      if (data.isFirstParty) {\n        return axios.put(BACKEND_URL + \"/SessionData\", {\n          sessionId: this.sessionId,\n          N: data.public.N.toString(16)\n        });\n      }\n    });\n  }\n\n  // Save to local storage\n  saveKeys(data, userId) {\n    window.localStorage.setItem(`keys:${this.sessionId}`, JSON.stringify({\n      theta: data.public.theta.toString(),\n      delta: data.public.delta.toString(),\n      vk: data.public.vk.toString(),\n      f: data.private.f.toString(),\n      vki: data.private.vki.toString(),\n      userId\n    }));\n  }\n}\nexport class DecryptSession extends Session {\n  constructor(signaller, sessionId, delta, theta, vk, fi, vki) {\n    super(signaller, sessionId);\n    this.delta = delta;\n    this.theta = theta;\n    this.vk = vk;\n    this.fi = fi;\n    this.vki = vki;\n    this.tally$ = new ReplaySubject(1);\n    this.voteData$ = new ReplaySubject(1);\n  }\n  async performAction(userId, parties) {\n    const {\n      voteVerification,\n      candidates,\n      pubKey\n    } = await getAndVerifyVotes(this.sessionId);\n    this.voteData$.next(voteVerification);\n    const combinedVotes = voteVerification.filter(vote => vote.signature && vote.zkp).reduce((existing, vote) => combineCiphertext(existing, vote.vote), 1n);\n    const partyNumbers = this.readPartyNumbers();\n    const tally = await decrypt(combinedVotes, userId, parties, partyNumbers, BigInt(\"0x\" + pubKey), this.delta, this.theta, this.vk, this.fi, this.vki, candidates.map(c => c.message), keyLength, threshold);\n    console.log({\n      tally\n    });\n    this.tally$.next(tally.map(t => {\n      var _candidates$find;\n      return {\n        message: t.candidate,\n        votes: Number.parseInt(t.votes.toString()),\n        name: (_candidates$find = candidates.find(c => c.message === t.candidate)) === null || _candidates$find === void 0 ? void 0 : _candidates$find.title\n      };\n    }));\n  }\n  readPartyNumbers() {\n    const d = window.localStorage.getItem(`parties:${this.sessionId}`);\n    if (!d) {\n      throw new Error(\"Party numbers not present in local storage!\");\n    }\n    return JSON.parse(d);\n  }\n}\n\n// Read from local storage and return the keys\nexport function readKeys(sessionId) {\n  const s = window.localStorage.getItem(`keys:${sessionId}`);\n  if (s) {\n    const obj = JSON.parse(s);\n    return {\n      theta: BigInt(obj.theta),\n      delta: BigInt(obj.delta),\n      vk: BigInt(obj.vk),\n      fi: BigInt(obj.f),\n      vki: BigInt(obj.vki),\n      userId: obj.userId\n    };\n  }\n  return null;\n}\n\n// Create a new session\nexport async function joinEncryptSession(sessionId) {\n  const signaller = await createSignaller(sessionId + \"/encrypt\");\n  return new EncryptSession(signaller, sessionId);\n}\nexport async function joinDecryptSession(sessionId, userId, delta, theta, vk, fi, vki) {\n  const signaller = await createSignaller(sessionId + \"/decrypt\", userId);\n  return new DecryptSession(signaller, sessionId, delta, theta, vk, fi, vki);\n}\nexport async function getAndVerifyVotes(sessionId) {\n  let flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const {\n    data\n  } = await axios.get(BACKEND_URL + \"/Vote/\" + sessionId);\n  const conv = arr => arr.map(v => (v.startsWith(\"-\") ? BigInt(-1) : BigInt(1)) * BigInt(\"0x\" + v.replace(\"-\", \"\")));\n\n  // Filtered + Shuffled votes:\n  let votesToInclude;\n  if (!flag) {\n    const {\n      data: filteredData\n    } = await axios.get(BACKEND_URL + \"/Vote/FilterOne\");\n    // // //create a set to speed lookup\n    votesToInclude = new Set(filteredData.map(vote => vote.vote.slice(2)));\n    console.log(\"votesToInclude\", votesToInclude);\n    console.log(\"dataFilter\", filteredData);\n    console.log(\"dataoldd\", data);\n  }\n  //  VotesToInclude must have hex representation of the vote\n  let votes;\n  if (!flag) {\n    votes = data.filter(v => votesToInclude.has(v.vote)).map(v => ({\n      vote: BigInt(\"0x\" + v.vote),\n      groupId: v.groupId,\n      y0: BigInt(\"0x\" + v.y0),\n      s: BigInt(\"0x\" + v.s),\n      c: v.c.map(c => BigInt(\"0x\" + c)),\n      proof: v.proof.map(pArr => conv(pArr)),\n      //  counter: v.counter,\n      //  voterID: v.vid,\n      token: v.token\n    }));\n  } else {\n    votes = data.map(v => ({\n      vote: BigInt(\"0x\" + v.vote),\n      groupId: v.groupId,\n      y0: BigInt(\"0x\" + v.y0),\n      s: BigInt(\"0x\" + v.s),\n      c: v.c.map(c => BigInt(\"0x\" + c)),\n      proof: v.proof.map(pArr => conv(pArr)),\n      //  counter: v.counter,\n      //  voterID: v.vid,\n      token: v.token\n    }));\n  }\n  console.log(\"votes\", {\n    votes\n  });\n  const {\n    data: {\n      candidates: cand,\n      pubKey\n    }\n  } = await axios.get(BACKEND_URL + \"/SessionData/\" + sessionId);\n  const candidates = cand.map(c => ({\n    title: c.title,\n    message: BigInt(\"0x\" + c.message)\n  }));\n  const {\n    data: groupData\n  } = await axios.get(BACKEND_URL + \"/Vote/Voter\");\n  const groups = Object.entries(groupData).map(_ref5 => {\n    let [id, pubKeys] = _ref5;\n    return [id, pubKeys.map(key => BigInt(\"0x\" + key))];\n  }).reduce((acc, _ref6) => {\n    let [id, data] = _ref6;\n    acc[id] = data;\n    return acc;\n  }, {});\n  const voteVerification = votes.map(vote => {\n    //verify signature\n    const group = groups[vote.groupId];\n    const sign = new Signature({\n      value0: BigInteger(vote.y0),\n      value1: BigInteger(vote.s),\n      value2: vote.c.map(n => BigInteger(n))\n    });\n    const sigVerified = verifySignature(vote.vote, sign, group.map(k => BigInteger(k)));\n\n    //verify zkp\n    const valid = verifyMembershipZkp(vote.vote, vote.proof, candidates.map(c => c.message), BigInt(\"0x\" + pubKey));\n    return {\n      vote: vote.vote,\n      groupId: vote.groupId,\n      y0: vote.y0,\n      zkp: valid,\n      signature: sigVerified,\n      token: vote.token\n    };\n  });\n  return {\n    voteVerification,\n    candidates,\n    pubKey\n  };\n}\nexport async function GetLookUpTable() {\n  const {\n    data\n  } = await axios.get(BACKEND_URL + \"/Lookup\");\n  return data;\n}\n_c = GetLookUpTable;\nvar _c;\n$RefreshReg$(_c, \"GetLookUpTable\");","map":{"version":3,"names":["axios","BehaviorSubject","combineLatest","concatMap","filter","first","from","map","pairwise","ReplaySubject","scan","shareReplay","startWith","switchMap","withLatestFrom","BACKEND_URL","startGeneration","decrypt","verifyMembershipZkp","combineCiphertext","createParty","createSignaller","Signature","verifySignature","BigInteger","VrfGenerator","keyLength","threshold","Session","userId$","signaller","isReady","_ready","getValue","vrf","_vrf","generationInProgress","_generationInProgress","constructor","sessionId","partiesChange$","parties$","pipe","parties","_ref","currentParties","serverParties","removed","p","some","sP","id","party","act","added","sParty","cParty","_ref2","userId","_ref3","n","partyId","nParty","sendReady","toRemove","cleanup","bufferSize","refCount","allReady$","ready$","ready","_ref4","states","every","s","performAction","console","log","val","subscribe","next","forEach","ps","EncryptSession","arguments","generatedKeys$","then","data","saveKeys","window","localStorage","setItem","JSON","stringify","allParties","isFirstParty","put","N","public","toString","theta","delta","vk","f","private","vki","DecryptSession","fi","tally$","voteData$","voteVerification","candidates","pubKey","getAndVerifyVotes","combinedVotes","vote","signature","zkp","reduce","existing","partyNumbers","readPartyNumbers","tally","BigInt","c","message","t","_candidates$find","candidate","votes","Number","parseInt","name","find","title","d","getItem","Error","parse","readKeys","obj","joinEncryptSession","joinDecryptSession","flag","length","undefined","get","conv","arr","v","startsWith","replace","votesToInclude","filteredData","Set","slice","has","groupId","y0","proof","pArr","token","cand","groupData","groups","Object","entries","_ref5","pubKeys","key","acc","_ref6","group","sign","value0","value1","value2","sigVerified","k","valid","GetLookUpTable","_c","$RefreshReg$"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/frontend/src/connections/session.ts"],"sourcesContent":["import axios from \"axios\";\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concatMap,\n  filter,\n  first,\n  from,\n  map,\n  pairwise,\n  ReplaySubject,\n  scan,\n  shareReplay,\n  startWith,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from \"rxjs\";\nimport { BACKEND_URL } from \"./api\";\nimport {\n  GeneratedKeys,\n  startGeneration,\n  decrypt,\n  verifyMembershipZkp,\n  combineCiphertext,\n} from \"pallier\";\nimport { createParty, Party } from \"./party\";\nimport { createSignaller, Signaller } from \"./signalling\";\nimport { Signature, verifySignature } from \"lrs\";\nimport BigInteger from \"big-integer\";\nimport VrfGenerator from \"../Vrf/vrf\";\n\nconst keyLength = 80n;\nconst threshold = 2;\n\nexport abstract class Session {\n  private _ready = new BehaviorSubject(false);\n  private _generationInProgress = false;\n  private _vrf: any;\n\n  get userId$() {\n    return this.signaller.userId$;\n  }\n\n  get isReady() {\n    return this._ready.getValue();\n  }\n\n  get vrf() {\n    return this._vrf;\n  }\n\n  get generationInProgress() {\n    return this._generationInProgress;\n  }\n\n  constructor(\n    private signaller: Signaller,\n    protected readonly sessionId: string\n  ) {\n    this._vrf = VrfGenerator();\n  }\n\n  readonly partiesChange$ = this.signaller.parties$.pipe(\n    startWith({ parties: [] }),\n    pairwise(),\n    switchMap(([{ parties: currentParties }, { parties: serverParties }]) => {\n      const removed = currentParties\n        .filter((p) => {\n          return !serverParties.some((sP) => sP.id === p.id);\n        })\n        .map((party) => ({ act: \"rem\", party } as const));\n\n      const added = serverParties\n        .filter(\n          (sParty) => !currentParties.some((cParty) => cParty.id === sParty.id)\n        )\n        .map((party) => ({ act: \"add\", party } as const));\n\n      return from([...removed, ...added]);\n    })\n  );\n\n  readonly parties$ = this.partiesChange$.pipe(\n    withLatestFrom(this.signaller.userId$),\n    filter(([{ party }, userId]) => party.id !== userId),\n    concatMap(async ([party, userId]) => {\n      if (party.act === \"add\") {\n        const n = await createParty(userId, party.party.id, this.signaller);\n        return {\n          party: n,\n          act: party.act,\n        } as const;\n      } else {\n        return {\n          partyId: party.party.id,\n          act: party.act,\n        } as const;\n      }\n    }),\n    scan((parties, nParty) => {\n      if (nParty.act === \"add\") {\n        nParty.party.sendReady(this._ready.getValue());\n        return [...parties, nParty.party];\n      } else {\n        return parties.filter((p) => {\n          const toRemove = p.partyId !== nParty.partyId;\n          if (!toRemove) {\n            p.cleanup();\n          }\n          return toRemove;\n        });\n      }\n    }, [] as Party[]),\n    shareReplay({\n      bufferSize: 1,\n      refCount: false,\n    })\n  );\n\n  readonly allReady$ = this.parties$\n    .pipe(\n      switchMap((parties) =>\n        combineLatest([\n          combineLatest(\n            parties.map((p) =>\n              p.ready$.pipe(map((ready) => ({ ready, party: p })))\n            )\n          ),\n          this.signaller.userId$,\n          this._ready,\n        ])\n      ),\n      map(([states, userId]) => {\n        if (this.isReady && states.every((s) => s.ready)) {\n          if (!this.generationInProgress) {\n            this.performAction(\n              userId,\n              states.map((p) => p.party)\n            );\n            this._generationInProgress = true;\n            console.log(\"starting generation\");\n          }\n          return true;\n        }\n        return false;\n      }),\n      filter((val) => val),\n      first()\n    )\n    .subscribe();\n\n  ready(ready: boolean) {\n    this._ready.next(ready);\n    this.parties$\n      .pipe(first())\n      .subscribe((parties) => parties.forEach((p) => p.sendReady(ready, this.vrf)));\n  }\n\n  protected abstract performAction(userId: string, parties: Party[]): any;\n\n  cleanup() { \n    this.signaller.cleanup();\n    this.parties$.pipe(first()).subscribe((ps) => {\n      ps.forEach((p) => p.cleanup());\n    });\n  }\n}\n\nexport class EncryptSession extends Session {\n  readonly generatedKeys$ = new ReplaySubject<GeneratedKeys>();\n\n  async performAction(userId: string, parties: Party[]) {\n    startGeneration(userId, parties, keyLength, threshold).then((data) => {\n      this.generatedKeys$.next(data);\n      this.saveKeys(data, userId);\n      window.localStorage.setItem(\n        `parties:${this.sessionId}`,\n        JSON.stringify(data.allParties)\n      );\n      console.log(\"finished generation\" + data.allParties);\n      if (data.isFirstParty) {\n        return axios.put(BACKEND_URL + \"/SessionData\", {\n          sessionId: this.sessionId,\n          N: data.public.N.toString(16),\n        });\n      }\n    });\n  }\n\n  // Save to local storage\n  private saveKeys(data: GeneratedKeys, userId: string) {\n    window.localStorage.setItem(\n      `keys:${this.sessionId}`,\n      JSON.stringify({\n        theta: data.public.theta.toString(),\n        delta: data.public.delta.toString(),\n        vk: data.public.vk.toString(),\n        f: data.private.f.toString(),\n        vki: data.private.vki.toString(),\n        userId,\n      })\n    );\n  }\n}\n\nexport interface Tally {\n  name: string;\n  message: bigint;\n  votes: number;\n}\nexport class DecryptSession extends Session {\n  readonly tally$ = new ReplaySubject<Tally[]>(1);\n  readonly voteData$ = new ReplaySubject<\n    {\n      vote: bigint;\n      y0: bigint;\n      groupId: string;\n      zkp: boolean;\n      signature: boolean;\n      token: string;\n    }[]\n  >(1);\n\n  constructor(\n    signaller: Signaller,\n    sessionId: string,\n    private readonly delta: bigint,\n    private readonly theta: bigint,\n    private readonly vk: bigint,\n    private readonly fi: bigint,\n    private readonly vki: bigint\n  ) {\n    super(signaller, sessionId);\n  }\n\n  async performAction(userId: string, parties: Party[]) {\n    const { voteVerification, candidates, pubKey } = await getAndVerifyVotes(\n      this.sessionId\n    );\n\n    this.voteData$.next(voteVerification);\n\n    const combinedVotes = voteVerification\n      .filter((vote) => vote.signature && vote.zkp)\n      .reduce((existing, vote) => combineCiphertext(existing, vote.vote), 1n);\n\n    const partyNumbers = this.readPartyNumbers();\n\n    const tally = await decrypt(\n      combinedVotes,\n      userId,\n      parties,\n      partyNumbers,\n      BigInt(\"0x\" + pubKey),\n      this.delta,\n      this.theta,\n      this.vk,\n      this.fi,\n      this.vki,\n      candidates.map((c) => c.message),\n      keyLength,\n      threshold\n    );\n\n    console.log({ tally });\n\n    this.tally$.next(\n      tally.map((t) => ({\n        message: t.candidate,\n        votes: Number.parseInt(t.votes.toString()),\n        name: candidates.find((c) => c.message === t.candidate)?.title,\n      }))\n    );\n  }\n\n  private readPartyNumbers() {\n    const d = window.localStorage.getItem(`parties:${this.sessionId}`);\n    if (!d) {\n      throw new Error(\"Party numbers not present in local storage!\");\n    }\n    return JSON.parse(d) as { id: string; number: number }[];\n  }\n}\n\n// Read from local storage and return the keys\nexport function readKeys(sessionId: string) {\n  const s = window.localStorage.getItem(`keys:${sessionId}`);\n  if (s) {\n    const obj = JSON.parse(s);\n\n    return {\n      theta: BigInt(obj.theta),\n      delta: BigInt(obj.delta),\n      vk: BigInt(obj.vk),\n      fi: BigInt(obj.f),\n      vki: BigInt(obj.vki),\n      userId: obj.userId as string,\n    };\n  }\n  return null;\n}\n\n// Create a new session\nexport async function joinEncryptSession(sessionId: string) {\n  const signaller = await createSignaller(sessionId + \"/encrypt\");\n  return new EncryptSession(signaller, sessionId);\n}\n\nexport async function joinDecryptSession(\n  sessionId: string,\n  userId: string,\n  delta: bigint,\n  theta: bigint,\n  vk: bigint,\n  fi: bigint,\n  vki: bigint\n) {\n  const signaller = await createSignaller(sessionId + \"/decrypt\", userId);\n  return new DecryptSession(signaller, sessionId, delta, theta, vk, fi, vki);\n}\n\nexport async function getAndVerifyVotes(sessionId: string, flag = 0) {\n  const { data } = await axios.get<any[]>(BACKEND_URL + \"/Vote/\" + sessionId);\n  const conv = (arr: string[]) =>\n    arr.map(\n      (v) =>\n        (v.startsWith(\"-\") ? BigInt(-1) : BigInt(1)) *\n        BigInt(\"0x\" + v.replace(\"-\", \"\"))\n    );\n\n  // Filtered + Shuffled votes:\n  let votesToInclude: Set<string>;\n  if (!flag) {\n    const { data: filteredData } = await axios.get<{ vote: string }[]>(\n      BACKEND_URL + \"/Vote/FilterOne\"\n    );\n    // // //create a set to speed lookup\n    votesToInclude = new Set(filteredData.map((vote) => vote.vote.slice(2)));\n\n    console.log(\"votesToInclude\", votesToInclude);\n    console.log(\"dataFilter\", filteredData);\n    console.log(\"dataoldd\", data);\n  }\n  //  VotesToInclude must have hex representation of the vote\n  let votes;\n  if (!flag) {\n    votes = data\n      .filter((v) => votesToInclude.has(v.vote))\n      .map((v) => ({\n        vote: BigInt(\"0x\" + v.vote),\n        groupId: v.groupId,\n        y0: BigInt(\"0x\" + v.y0),\n        s: BigInt(\"0x\" + v.s),\n        c: (v.c as string[]).map((c: string) => BigInt(\"0x\" + c)),\n        proof: (v.proof as string[][]).map((pArr) => conv(pArr)),\n        //  counter: v.counter,\n        //  voterID: v.vid,\n        token: v.token,\n      }));\n  } else {\n    votes = data.map((v) => ({\n      vote: BigInt(\"0x\" + v.vote),\n      groupId: v.groupId,\n      y0: BigInt(\"0x\" + v.y0),\n      s: BigInt(\"0x\" + v.s),\n      c: (v.c as string[]).map((c: string) => BigInt(\"0x\" + c)),\n      proof: (v.proof as string[][]).map((pArr) => conv(pArr)),\n      //  counter: v.counter,\n      //  voterID: v.vid,\n      token: v.token,\n    }));\n  }\n  console.log(\"votes\", { votes });\n\n  const {\n    data: { candidates: cand, pubKey },\n  } = await axios.get(BACKEND_URL + \"/SessionData/\" + sessionId);\n\n  const candidates = (cand as []).map((c: any) => ({\n    title: c.title,\n    message: BigInt(\"0x\" + c.message),\n  }));\n\n  const { data: groupData } = await axios.get<{ [id: string]: string[] }>(\n    BACKEND_URL + \"/Vote/Voter\"\n  );\n\n  const groups = Object.entries(groupData)\n    .map(\n      ([id, pubKeys]) => [id, pubKeys.map((key) => BigInt(\"0x\" + key))] as const\n    )\n    .reduce((acc, [id, data]) => {\n      acc[id] = data;\n      return acc;\n    }, {} as { [id: string]: bigint[] });\n\n  const voteVerification = votes.map((vote) => {\n    //verify signature\n    const group = groups[vote.groupId];\n\n    const sign = new Signature({\n      value0: BigInteger(vote.y0),\n      value1: BigInteger(vote.s),\n      value2: vote.c.map((n: any) => BigInteger(n)),\n    });\n\n    const sigVerified = verifySignature(\n      vote.vote,\n      sign,\n      group.map((k) => BigInteger(k))\n    );\n\n    //verify zkp\n    const valid = verifyMembershipZkp(\n      vote.vote,\n      vote.proof as [bigint[], bigint[], bigint[]],\n      candidates.map((c) => c.message),\n      BigInt(\"0x\" + pubKey)\n    );\n\n    return {\n      vote: vote.vote,\n      groupId: vote.groupId,\n      y0: vote.y0,\n      zkp: valid,\n      signature: sigVerified,\n      token: vote.token,\n    };\n  });\n\n  return { voteVerification, candidates, pubKey };\n}\n\nexport async function GetLookUpTable() {\n  const { data } = await axios.get<{ value: string; point: string }[]>(\n    BACKEND_URL + \"/Lookup\"\n  );\n  return data;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}