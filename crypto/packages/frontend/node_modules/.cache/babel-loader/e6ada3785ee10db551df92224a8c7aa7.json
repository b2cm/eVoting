{"ast":null,"code":"\"use strict\";\n\n// module Data.BigInt\nvar bigInt = require(\"big-integer\");\nexports[\"fromBase'\"] = function (just) {\n  return function (nothing) {\n    return function (b) {\n      return function (s) {\n        try {\n          var x = bigInt(s, b);\n          return just(x);\n        } catch (err) {\n          return nothing;\n        }\n      };\n    };\n  };\n};\nexports.fromInt = bigInt;\nexports.toBase = function (b) {\n  return function (x) {\n    return x.toString(b);\n  };\n};\nexports.toString = function (x) {\n  return x.toString();\n};\nexports.toNumber = function (x) {\n  return x.toJSNumber();\n};\nexports.biAdd = function (x) {\n  return function (y) {\n    return x.add(y);\n  };\n};\nexports.biMul = function (x) {\n  return function (y) {\n    return x.multiply(y);\n  };\n};\nexports.biSub = function (x) {\n  return function (y) {\n    return x.minus(y);\n  };\n};\nexports.biMod = function (x) {\n  return function (y) {\n    return x.mod(y);\n  };\n};\nexports.biDiv = function (x) {\n  return function (y) {\n    return x.divide(y);\n  };\n};\nexports.biEquals = function (x) {\n  return function (y) {\n    return x.equals(y);\n  };\n};\nexports.biCompare = function (x) {\n  return function (y) {\n    return x.compare(y);\n  };\n};\nexports.abs = function (x) {\n  return x.abs();\n};\nexports.even = function (x) {\n  return x.isEven();\n};\nexports.odd = function (x) {\n  return x.isOdd();\n};\nexports.positive = function (x) {\n  return x.isPositive();\n};\nexports.negative = function (x) {\n  return x.isNegative();\n};\nexports.prime = function (x) {\n  return x.isPrime();\n};\nexports.pow = function (x) {\n  return function (y) {\n    return x.pow(y);\n  };\n};\nexports.modPow = function (x) {\n  return function (y) {\n    return function (z) {\n      return x.modPow(y, z);\n    };\n  };\n};","map":{"version":3,"names":["bigInt","require","exports","just","nothing","b","s","x","err","fromInt","toBase","toString","toNumber","toJSNumber","biAdd","y","add","biMul","multiply","biSub","minus","biMod","mod","biDiv","divide","biEquals","equals","biCompare","compare","abs","even","isEven","odd","isOdd","positive","isPositive","negative","isNegative","prime","isPrime","pow","modPow","z"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/lib/Data.BigInt/foreign.js"],"sourcesContent":["\"use strict\";\n// module Data.BigInt\nvar bigInt = require(\"big-integer\");\nexports[\"fromBase'\"] = function (just) {\n    return function (nothing) {\n        return function (b) {\n            return function (s) {\n                try {\n                    var x = bigInt(s, b);\n                    return just(x);\n                }\n                catch (err) {\n                    return nothing;\n                }\n            };\n        };\n    };\n};\nexports.fromInt = bigInt;\nexports.toBase = function (b) {\n    return function (x) {\n        return x.toString(b);\n    };\n};\nexports.toString = function (x) {\n    return x.toString();\n};\nexports.toNumber = function (x) {\n    return x.toJSNumber();\n};\nexports.biAdd = function (x) {\n    return function (y) {\n        return x.add(y);\n    };\n};\nexports.biMul = function (x) {\n    return function (y) {\n        return x.multiply(y);\n    };\n};\nexports.biSub = function (x) {\n    return function (y) {\n        return x.minus(y);\n    };\n};\nexports.biMod = function (x) {\n    return function (y) {\n        return x.mod(y);\n    };\n};\nexports.biDiv = function (x) {\n    return function (y) {\n        return x.divide(y);\n    };\n};\nexports.biEquals = function (x) {\n    return function (y) {\n        return x.equals(y);\n    };\n};\nexports.biCompare = function (x) {\n    return function (y) {\n        return x.compare(y);\n    };\n};\nexports.abs = function (x) {\n    return x.abs();\n};\nexports.even = function (x) {\n    return x.isEven();\n};\nexports.odd = function (x) {\n    return x.isOdd();\n};\nexports.positive = function (x) {\n    return x.isPositive();\n};\nexports.negative = function (x) {\n    return x.isNegative();\n};\nexports.prime = function (x) {\n    return x.isPrime();\n};\nexports.pow = function (x) {\n    return function (y) {\n        return x.pow(y);\n    };\n};\nexports.modPow = function (x) {\n    return function (y) {\n        return function (z) {\n            return x.modPow(y, z);\n        };\n    };\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACnCC,OAAO,CAAC,WAAW,CAAC,GAAG,UAAUC,IAAI,EAAE;EACnC,OAAO,UAAUC,OAAO,EAAE;IACtB,OAAO,UAAUC,CAAC,EAAE;MAChB,OAAO,UAAUC,CAAC,EAAE;QAChB,IAAI;UACA,IAAIC,CAAC,GAAGP,MAAM,CAACM,CAAC,EAAED,CAAC,CAAC;UACpB,OAAOF,IAAI,CAACI,CAAC,CAAC;QAClB,CAAC,CACD,OAAOC,GAAG,EAAE;UACR,OAAOJ,OAAO;QAClB;MACJ,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC;AACDF,OAAO,CAACO,OAAO,GAAGT,MAAM;AACxBE,OAAO,CAACQ,MAAM,GAAG,UAAUL,CAAC,EAAE;EAC1B,OAAO,UAAUE,CAAC,EAAE;IAChB,OAAOA,CAAC,CAACI,QAAQ,CAACN,CAAC,CAAC;EACxB,CAAC;AACL,CAAC;AACDH,OAAO,CAACS,QAAQ,GAAG,UAAUJ,CAAC,EAAE;EAC5B,OAAOA,CAAC,CAACI,QAAQ,CAAC,CAAC;AACvB,CAAC;AACDT,OAAO,CAACU,QAAQ,GAAG,UAAUL,CAAC,EAAE;EAC5B,OAAOA,CAAC,CAACM,UAAU,CAAC,CAAC;AACzB,CAAC;AACDX,OAAO,CAACY,KAAK,GAAG,UAAUP,CAAC,EAAE;EACzB,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAOR,CAAC,CAACS,GAAG,CAACD,CAAC,CAAC;EACnB,CAAC;AACL,CAAC;AACDb,OAAO,CAACe,KAAK,GAAG,UAAUV,CAAC,EAAE;EACzB,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAOR,CAAC,CAACW,QAAQ,CAACH,CAAC,CAAC;EACxB,CAAC;AACL,CAAC;AACDb,OAAO,CAACiB,KAAK,GAAG,UAAUZ,CAAC,EAAE;EACzB,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAOR,CAAC,CAACa,KAAK,CAACL,CAAC,CAAC;EACrB,CAAC;AACL,CAAC;AACDb,OAAO,CAACmB,KAAK,GAAG,UAAUd,CAAC,EAAE;EACzB,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAOR,CAAC,CAACe,GAAG,CAACP,CAAC,CAAC;EACnB,CAAC;AACL,CAAC;AACDb,OAAO,CAACqB,KAAK,GAAG,UAAUhB,CAAC,EAAE;EACzB,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAOR,CAAC,CAACiB,MAAM,CAACT,CAAC,CAAC;EACtB,CAAC;AACL,CAAC;AACDb,OAAO,CAACuB,QAAQ,GAAG,UAAUlB,CAAC,EAAE;EAC5B,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAOR,CAAC,CAACmB,MAAM,CAACX,CAAC,CAAC;EACtB,CAAC;AACL,CAAC;AACDb,OAAO,CAACyB,SAAS,GAAG,UAAUpB,CAAC,EAAE;EAC7B,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAOR,CAAC,CAACqB,OAAO,CAACb,CAAC,CAAC;EACvB,CAAC;AACL,CAAC;AACDb,OAAO,CAAC2B,GAAG,GAAG,UAAUtB,CAAC,EAAE;EACvB,OAAOA,CAAC,CAACsB,GAAG,CAAC,CAAC;AAClB,CAAC;AACD3B,OAAO,CAAC4B,IAAI,GAAG,UAAUvB,CAAC,EAAE;EACxB,OAAOA,CAAC,CAACwB,MAAM,CAAC,CAAC;AACrB,CAAC;AACD7B,OAAO,CAAC8B,GAAG,GAAG,UAAUzB,CAAC,EAAE;EACvB,OAAOA,CAAC,CAAC0B,KAAK,CAAC,CAAC;AACpB,CAAC;AACD/B,OAAO,CAACgC,QAAQ,GAAG,UAAU3B,CAAC,EAAE;EAC5B,OAAOA,CAAC,CAAC4B,UAAU,CAAC,CAAC;AACzB,CAAC;AACDjC,OAAO,CAACkC,QAAQ,GAAG,UAAU7B,CAAC,EAAE;EAC5B,OAAOA,CAAC,CAAC8B,UAAU,CAAC,CAAC;AACzB,CAAC;AACDnC,OAAO,CAACoC,KAAK,GAAG,UAAU/B,CAAC,EAAE;EACzB,OAAOA,CAAC,CAACgC,OAAO,CAAC,CAAC;AACtB,CAAC;AACDrC,OAAO,CAACsC,GAAG,GAAG,UAAUjC,CAAC,EAAE;EACvB,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAOR,CAAC,CAACiC,GAAG,CAACzB,CAAC,CAAC;EACnB,CAAC;AACL,CAAC;AACDb,OAAO,CAACuC,MAAM,GAAG,UAAUlC,CAAC,EAAE;EAC1B,OAAO,UAAUQ,CAAC,EAAE;IAChB,OAAO,UAAU2B,CAAC,EAAE;MAChB,OAAOnC,CAAC,CAACkC,MAAM,CAAC1B,CAAC,EAAE2B,CAAC,CAAC;IACzB,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script"}