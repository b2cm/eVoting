{"ast":null,"code":"// Generated by psc version 0.9.3\n\"use strict\";\n\nvar $foreign = require(\"./foreign\");\nvar Data_Function = require(\"../Data.Function\");\nvar Data_Unit = require(\"../Data.Unit\");\nvar Control_Semigroupoid = require(\"../Control.Semigroupoid\");\nvar Functor = function (map) {\n  this.map = map;\n};\nvar map = function (dict) {\n  return dict.map;\n};\nvar mapFlipped = function (dictFunctor) {\n  return function (fa) {\n    return function (f) {\n      return map(dictFunctor)(f)(fa);\n    };\n  };\n};\nvar $$void = function (dictFunctor) {\n  return map(dictFunctor)(Data_Function[\"const\"](Data_Unit.unit));\n};\nvar voidLeft = function (dictFunctor) {\n  return function (f) {\n    return function (x) {\n      return map(dictFunctor)(Data_Function[\"const\"](x))(f);\n    };\n  };\n};\nvar voidRight = function (dictFunctor) {\n  return function (x) {\n    return map(dictFunctor)(Data_Function[\"const\"](x));\n  };\n};\nvar functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));\nvar functorArray = new Functor($foreign.arrayMap);\nvar flap = function (dictFunctor) {\n  return function (ff) {\n    return function (x) {\n      return map(dictFunctor)(function (f) {\n        return f(x);\n      })(ff);\n    };\n  };\n};\nmodule.exports = {\n  Functor: Functor,\n  flap: flap,\n  map: map,\n  mapFlipped: mapFlipped,\n  \"void\": $$void,\n  voidLeft: voidLeft,\n  voidRight: voidRight,\n  functorFn: functorFn,\n  functorArray: functorArray\n};","map":{"version":3,"names":["$foreign","require","Data_Function","Data_Unit","Control_Semigroupoid","Functor","map","dict","mapFlipped","dictFunctor","fa","f","$$void","unit","voidLeft","x","voidRight","functorFn","compose","semigroupoidFn","functorArray","arrayMap","flap","ff","module","exports"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/lib/Data.Functor/index.js"],"sourcesContent":["// Generated by psc version 0.9.3\n\"use strict\";\nvar $foreign = require(\"./foreign\");\nvar Data_Function = require(\"../Data.Function\");\nvar Data_Unit = require(\"../Data.Unit\");\nvar Control_Semigroupoid = require(\"../Control.Semigroupoid\");\nvar Functor = function (map) {\n    this.map = map;\n};\nvar map = function (dict) {\n    return dict.map;\n};\nvar mapFlipped = function (dictFunctor) {\n    return function (fa) {\n        return function (f) {\n            return map(dictFunctor)(f)(fa);\n        };\n    };\n};\nvar $$void = function (dictFunctor) {\n    return map(dictFunctor)(Data_Function[\"const\"](Data_Unit.unit));\n};\nvar voidLeft = function (dictFunctor) {\n    return function (f) {\n        return function (x) {\n            return map(dictFunctor)(Data_Function[\"const\"](x))(f);\n        };\n    };\n};\nvar voidRight = function (dictFunctor) {\n    return function (x) {\n        return map(dictFunctor)(Data_Function[\"const\"](x));\n    };\n};\nvar functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));\nvar functorArray = new Functor($foreign.arrayMap);\nvar flap = function (dictFunctor) {\n    return function (ff) {\n        return function (x) {\n            return map(dictFunctor)(function (f) {\n                return f(x);\n            })(ff);\n        };\n    };\n};\nmodule.exports = {\n    Functor: Functor,\n    flap: flap,\n    map: map,\n    mapFlipped: mapFlipped,\n    \"void\": $$void,\n    voidLeft: voidLeft,\n    voidRight: voidRight,\n    functorFn: functorFn,\n    functorArray: functorArray\n};\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACnC,IAAIC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC/C,IAAIE,SAAS,GAAGF,OAAO,CAAC,cAAc,CAAC;AACvC,IAAIG,oBAAoB,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAC7D,IAAII,OAAO,GAAG,SAAAA,CAAUC,GAAG,EAAE;EACzB,IAAI,CAACA,GAAG,GAAGA,GAAG;AAClB,CAAC;AACD,IAAIA,GAAG,GAAG,SAAAA,CAAUC,IAAI,EAAE;EACtB,OAAOA,IAAI,CAACD,GAAG;AACnB,CAAC;AACD,IAAIE,UAAU,GAAG,SAAAA,CAAUC,WAAW,EAAE;EACpC,OAAO,UAAUC,EAAE,EAAE;IACjB,OAAO,UAAUC,CAAC,EAAE;MAChB,OAAOL,GAAG,CAACG,WAAW,CAAC,CAACE,CAAC,CAAC,CAACD,EAAE,CAAC;IAClC,CAAC;EACL,CAAC;AACL,CAAC;AACD,IAAIE,MAAM,GAAG,SAAAA,CAAUH,WAAW,EAAE;EAChC,OAAOH,GAAG,CAACG,WAAW,CAAC,CAACP,aAAa,CAAC,OAAO,CAAC,CAACC,SAAS,CAACU,IAAI,CAAC,CAAC;AACnE,CAAC;AACD,IAAIC,QAAQ,GAAG,SAAAA,CAAUL,WAAW,EAAE;EAClC,OAAO,UAAUE,CAAC,EAAE;IAChB,OAAO,UAAUI,CAAC,EAAE;MAChB,OAAOT,GAAG,CAACG,WAAW,CAAC,CAACP,aAAa,CAAC,OAAO,CAAC,CAACa,CAAC,CAAC,CAAC,CAACJ,CAAC,CAAC;IACzD,CAAC;EACL,CAAC;AACL,CAAC;AACD,IAAIK,SAAS,GAAG,SAAAA,CAAUP,WAAW,EAAE;EACnC,OAAO,UAAUM,CAAC,EAAE;IAChB,OAAOT,GAAG,CAACG,WAAW,CAAC,CAACP,aAAa,CAAC,OAAO,CAAC,CAACa,CAAC,CAAC,CAAC;EACtD,CAAC;AACL,CAAC;AACD,IAAIE,SAAS,GAAG,IAAIZ,OAAO,CAACD,oBAAoB,CAACc,OAAO,CAACd,oBAAoB,CAACe,cAAc,CAAC,CAAC;AAC9F,IAAIC,YAAY,GAAG,IAAIf,OAAO,CAACL,QAAQ,CAACqB,QAAQ,CAAC;AACjD,IAAIC,IAAI,GAAG,SAAAA,CAAUb,WAAW,EAAE;EAC9B,OAAO,UAAUc,EAAE,EAAE;IACjB,OAAO,UAAUR,CAAC,EAAE;MAChB,OAAOT,GAAG,CAACG,WAAW,CAAC,CAAC,UAAUE,CAAC,EAAE;QACjC,OAAOA,CAAC,CAACI,CAAC,CAAC;MACf,CAAC,CAAC,CAACQ,EAAE,CAAC;IACV,CAAC;EACL,CAAC;AACL,CAAC;AACDC,MAAM,CAACC,OAAO,GAAG;EACbpB,OAAO,EAAEA,OAAO;EAChBiB,IAAI,EAAEA,IAAI;EACVhB,GAAG,EAAEA,GAAG;EACRE,UAAU,EAAEA,UAAU;EACtB,MAAM,EAAEI,MAAM;EACdE,QAAQ,EAAEA,QAAQ;EAClBE,SAAS,EAAEA,SAAS;EACpBC,SAAS,EAAEA,SAAS;EACpBG,YAAY,EAAEA;AAClB,CAAC"},"metadata":{},"sourceType":"script"}