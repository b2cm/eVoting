{"ast":null,"code":"function n(n) {\n  return n >= 0 ? n : -n;\n}\nfunction t(n) {\n  if (\"number\" == typeof n && (n = BigInt(n)), 1n === n) return 1;\n  let t = 1;\n  do {\n    t++;\n  } while ((n >>= 1n) > 1n);\n  return t;\n}\nfunction e(n, t) {\n  if (\"number\" == typeof n && (n = BigInt(n)), \"number\" == typeof t && (t = BigInt(t)), n <= 0n || t <= 0n) throw new RangeError(\"a and b MUST be > 0\");\n  let e = 0n,\n    r = 1n,\n    o = 1n,\n    i = 0n;\n  for (; 0n !== n;) {\n    const s = t / n,\n      u = t % n,\n      a = e - o * s,\n      c = r - i * s;\n    t = n, n = u, e = o, r = i, o = a, i = c;\n  }\n  return {\n    g: t,\n    x: e,\n    y: r\n  };\n}\nfunction r(t, e) {\n  let r = \"number\" == typeof t ? BigInt(n(t)) : n(t),\n    o = \"number\" == typeof e ? BigInt(n(e)) : n(e);\n  if (0n === r) return o;\n  if (0n === o) return r;\n  let i = 0n;\n  for (; 0n === (1n & (r | o));) r >>= 1n, o >>= 1n, i++;\n  for (; 0n === (1n & r);) r >>= 1n;\n  do {\n    for (; 0n === (1n & o);) o >>= 1n;\n    if (r > o) {\n      const n = r;\n      r = o, o = n;\n    }\n    o -= r;\n  } while (0n !== o);\n  return r << i;\n}\nfunction o(t, e) {\n  return \"number\" == typeof t && (t = BigInt(t)), \"number\" == typeof e && (e = BigInt(e)), 0n === t && 0n === e ? BigInt(0) : n(t / r(t, e) * e);\n}\nfunction i(n, t) {\n  return n >= t ? n : t;\n}\nfunction s(n, t) {\n  return n >= t ? t : n;\n}\nfunction u(n, t) {\n  if (\"number\" == typeof n && (n = BigInt(n)), \"number\" == typeof t && (t = BigInt(t)), t <= 0n) throw new RangeError(\"n must be > 0\");\n  const e = n % t;\n  return e < 0n ? e + t : e;\n}\nfunction a(n, t) {\n  const r = e(u(n, t), t);\n  if (1n !== r.g) throw new RangeError(`${n.toString()} does not have inverse modulo ${t.toString()}`);\n  return u(r.x, t);\n}\nfunction c(t, e, r) {\n  if (\"number\" == typeof t && (t = BigInt(t)), \"number\" == typeof e && (e = BigInt(e)), \"number\" == typeof r && (r = BigInt(r)), r <= 0n) throw new RangeError(\"n must be > 0\");\n  if (1n === r) return 0n;\n  if (t = u(t, r), e < 0n) return a(c(t, n(e), r), r);\n  let o = 1n;\n  for (; e > 0;) e % 2n === 1n && (o = o * t % r), e /= 2n, t = t ** 2n % r;\n  return o;\n}\nfunction f(n) {\n  let t = 0n;\n  for (const e of n.values()) {\n    t = (t << 8n) + BigInt(e);\n  }\n  return t;\n}\nfunction g(n, t = !1) {\n  if (n < 1) throw new RangeError(\"byteLength MUST be > 0\");\n  return new Promise(function (e, r) {\n    {\n      const r = new Uint8Array(n);\n      if (n <= 65536) self.crypto.getRandomValues(r);else for (let t = 0; t < Math.ceil(n / 65536); t++) {\n        const e = 65536 * t,\n          o = e + 65535 < n ? e + 65535 : n - 1;\n        self.crypto.getRandomValues(r.subarray(e, o));\n      }\n      t && (r[0] = 128 | r[0]), e(r);\n    }\n  });\n}\nfunction m(n, t = !1) {\n  if (n < 1) throw new RangeError(\"byteLength MUST be > 0\");\n  {\n    const e = new Uint8Array(n);\n    if (n <= 65536) self.crypto.getRandomValues(e);else for (let t = 0; t < Math.ceil(n / 65536); t++) {\n      const r = 65536 * t,\n        o = r + 65535 < n ? r + 65535 : n - 1;\n      self.crypto.getRandomValues(e.subarray(r, o));\n    }\n    return t && (e[0] = 128 | e[0]), e;\n  }\n}\nfunction d(n, t = !1) {\n  if (n < 1) throw new RangeError(\"bitLength MUST be > 0\");\n  const e = Math.ceil(n / 8),\n    r = n % 8;\n  return new Promise((n, o) => {\n    g(e, !1).then(function (e) {\n      if (0 !== r && (e[0] = e[0] & 2 ** r - 1), t) {\n        const n = 0 !== r ? 2 ** (r - 1) : 128;\n        e[0] = e[0] | n;\n      }\n      n(e);\n    });\n  });\n}\nfunction b(n, t = !1) {\n  if (n < 1) throw new RangeError(\"bitLength MUST be > 0\");\n  const e = m(Math.ceil(n / 8), !1),\n    r = n % 8;\n  if (0 !== r && (e[0] = e[0] & 2 ** r - 1), t) {\n    const n = 0 !== r ? 2 ** (r - 1) : 128;\n    e[0] = e[0] | n;\n  }\n  return e;\n}\nfunction l(n, e = 1n) {\n  if (n <= e) throw new RangeError(\"Arguments MUST be: max > min\");\n  const r = n - e,\n    o = t(r);\n  let i;\n  do {\n    i = f(b(o));\n  } while (i > r);\n  return i + e;\n}\nlet w = !1;\nfunction h(n, t = 16, e = !1) {\n  if (\"number\" == typeof n && (n = BigInt(n)), n < 0n) throw RangeError(\"w MUST be >= 0\");\n  return new Promise((e, r) => {\n    const o = new Worker(p());\n    o.onmessage = n => {\n      void 0 !== n?.data?._bcu?.isPrime && (o.terminate(), e(n.data._bcu.isPrime));\n    }, o.onmessageerror = n => {\n      r(n);\n    };\n    const i = {\n      _bcu: {\n        rnd: n,\n        iterations: t,\n        id: 0\n      }\n    };\n    o.postMessage(i);\n  });\n}\nfunction y(n, t) {\n  if (2n === n) return !0;\n  if (0n === (1n & n) || 1n === n) return !1;\n  const e = [3n, 5n, 7n, 11n, 13n, 17n, 19n, 23n, 29n, 31n, 37n, 41n, 43n, 47n, 53n, 59n, 61n, 67n, 71n, 73n, 79n, 83n, 89n, 97n, 101n, 103n, 107n, 109n, 113n, 127n, 131n, 137n, 139n, 149n, 151n, 157n, 163n, 167n, 173n, 179n, 181n, 191n, 193n, 197n, 199n, 211n, 223n, 227n, 229n, 233n, 239n, 241n, 251n, 257n, 263n, 269n, 271n, 277n, 281n, 283n, 293n, 307n, 311n, 313n, 317n, 331n, 337n, 347n, 349n, 353n, 359n, 367n, 373n, 379n, 383n, 389n, 397n, 401n, 409n, 419n, 421n, 431n, 433n, 439n, 443n, 449n, 457n, 461n, 463n, 467n, 479n, 487n, 491n, 499n, 503n, 509n, 521n, 523n, 541n, 547n, 557n, 563n, 569n, 571n, 577n, 587n, 593n, 599n, 601n, 607n, 613n, 617n, 619n, 631n, 641n, 643n, 647n, 653n, 659n, 661n, 673n, 677n, 683n, 691n, 701n, 709n, 719n, 727n, 733n, 739n, 743n, 751n, 757n, 761n, 769n, 773n, 787n, 797n, 809n, 811n, 821n, 823n, 827n, 829n, 839n, 853n, 857n, 859n, 863n, 877n, 881n, 883n, 887n, 907n, 911n, 919n, 929n, 937n, 941n, 947n, 953n, 967n, 971n, 977n, 983n, 991n, 997n, 1009n, 1013n, 1019n, 1021n, 1031n, 1033n, 1039n, 1049n, 1051n, 1061n, 1063n, 1069n, 1087n, 1091n, 1093n, 1097n, 1103n, 1109n, 1117n, 1123n, 1129n, 1151n, 1153n, 1163n, 1171n, 1181n, 1187n, 1193n, 1201n, 1213n, 1217n, 1223n, 1229n, 1231n, 1237n, 1249n, 1259n, 1277n, 1279n, 1283n, 1289n, 1291n, 1297n, 1301n, 1303n, 1307n, 1319n, 1321n, 1327n, 1361n, 1367n, 1373n, 1381n, 1399n, 1409n, 1423n, 1427n, 1429n, 1433n, 1439n, 1447n, 1451n, 1453n, 1459n, 1471n, 1481n, 1483n, 1487n, 1489n, 1493n, 1499n, 1511n, 1523n, 1531n, 1543n, 1549n, 1553n, 1559n, 1567n, 1571n, 1579n, 1583n, 1597n];\n  for (let t = 0; t < e.length && e[t] <= n; t++) {\n    const r = e[t];\n    if (n === r) return !0;\n    if (n % r === 0n) return !1;\n  }\n  let r = 0n;\n  const o = n - 1n;\n  let i = o;\n  for (; i % 2n === 0n;) i /= 2n, ++r;\n  const s = o / 2n ** r;\n  do {\n    let t = c(l(o, 2n), s, n);\n    if (1n === t || t === o) continue;\n    let e = 1;\n    for (; e < r && (t = c(t, 2n, n), t !== o);) {\n      if (1n === t) return !1;\n      e++;\n    }\n    if (t !== o) return !1;\n  } while (0 != --t);\n  return !0;\n}\nfunction p() {\n  let n = `\\n  'use strict';\\n  const ${e.name} = ${e.toString()};\\n  const ${a.name} = ${a.toString()};\\n  const ${c.name} = ${c.toString()};\\n  const ${u.name} = ${u.toString()};\\n  const ${b.name} = ${b.toString()};\\n  const ${m.name} = ${m.toString()};\\n  const ${l.name} = ${l.toString()};\\n  const ${h.name} = ${y.toString()};\\n  ${t.toString()};\\n  ${f.toString()};`;\n  return n += `\\n  onmessage = async function(msg) {\\n    if (msg !== undefined && msg.data !== undefined && msg.data._bcu !== undefined && msg.data._bcu.id !== undefined && msg.data._bcu.iterations !== undefined && msg.data._bcu.rnd !== undefined) {\\n      const msgToParent = {\\n        _bcu: {\\n          isPrime: await ${h.name}(msg.data._bcu.rnd, msg.data._bcu.iterations),\\n          value: msg.data._bcu.rnd,\\n          id: msg.data._bcu.id\\n        }\\n      };\\n      postMessage(msgToParent);\\n    }\\n  }`, function (n) {\n    n = `(() => {${n}})()`;\n    const t = new Blob([n], {\n      type: \"text/javascript\"\n    });\n    return window.URL.createObjectURL(t);\n  }(n);\n}\nfunction $(n, t = 16) {\n  if (n < 1) throw new RangeError(\"bitLength MUST be > 0\");\n  if (!w) {\n    let e = 0n;\n    do {\n      e = f(b(n, !0));\n    } while (!y(e, t));\n    return new Promise(n => {\n      n(e);\n    });\n  }\n  return new Promise((e, r) => {\n    const o = [],\n      i = (r, i) => {\n        if (r._bcu.isPrime) {\n          for (let n = 0; n < o.length; n++) o[n].terminate();\n          for (; o.length > 0;) o.pop();\n          e(r._bcu.value);\n        } else {\n          const e = f(b(n, !0));\n          try {\n            const n = {\n              _bcu: {\n                rnd: e,\n                iterations: t,\n                id: r._bcu.id\n              }\n            };\n            i.postMessage(n);\n          } catch (n) {}\n        }\n      };\n    {\n      const n = p();\n      for (let t = 0; t < self.navigator.hardwareConcurrency - 1; t++) {\n        const t = new Worker(n);\n        t.onmessage = n => i(n.data, t), o.push(t);\n      }\n    }\n    for (let e = 0; e < o.length; e++) d(n, !0).then(function (n) {\n      const r = f(n);\n      o[e].postMessage({\n        _bcu: {\n          rnd: r,\n          iterations: t,\n          id: e\n        }\n      });\n    }).catch(r);\n  });\n}\nfunction S(n, t = 16) {\n  if (n < 1) throw new RangeError(\"bitLength MUST be > 0\");\n  let e = 0n;\n  do {\n    e = f(b(n, !0));\n  } while (!y(e, t));\n  return e;\n}\nvoid 0 !== self.Worker && (w = !0);\nexport { n as abs, t as bitLength, e as eGcd, r as gcd, h as isProbablyPrime, o as lcm, i as max, s as min, a as modInv, c as modPow, $ as prime, S as primeSync, l as randBetween, d as randBits, b as randBitsSync, g as randBytes, m as randBytesSync, u as toZn };","map":{"version":3,"sources":["../node_modules/bigint-mod-arith/dist/index.browser.esm.js","../src/ts/fromBuffer.ts","../src/ts/randBytes.ts","../src/ts/randBits.ts","../src/ts/randBetween.ts","../src/ts/workerUtils.ts","../src/ts/isProbablyPrime.ts","../src/ts/prime.ts"],"names":["n","t","BigInt","r","RangeError","e","o","u","i","f","g","b","x","y","toString","fromBuffer","buf","ret","values","randBytes","byteLength","forceLength","Promise","resolve","reject","Uint8Array","self","crypto","getRandomValues","Math","ceil","begin","end","subarray","randBytesSync","randBits","bitLength","bitLengthMod8","then","rndBytes","mask","randBitsSync","randBetween","max","min","interval","bitLen","rnd","workerCode","_blob","Blob","type","window","URL","createObjectURL","_useWorkers","Worker","undefined","isProbablyPrime","w","iterations","disableWorkers","worker","_isProbablyPrimeWorkerUrl","onmessage","event","data","_bcu","isPrime","terminate","onmessageerror","msg","id","postMessage","firstPrimes","length","p","a","d","aux","m","z","modPow","j","eGcd","name","modInv","toZn","_isProbablyPrime","_workerUrl","prime","workerList","_onmessage","newWorker","pop","value","msgToWorker","error","workerURL","navigator","hardwareConcurrency","push","catch","primeSync"],"mappings":"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","sourcesContent":["function n(n){return n>=0?n:-n}function t(n){if(\"number\"==typeof n&&(n=BigInt(n)),1n===n)return 1;let t=1;do{t++}while((n>>=1n)>1n);return t}function e(n,t){if(\"number\"==typeof n&&(n=BigInt(n)),\"number\"==typeof t&&(t=BigInt(t)),n<=0n||t<=0n)throw new RangeError(\"a and b MUST be > 0\");let e=0n,r=1n,o=1n,i=0n;for(;0n!==n;){const s=t/n,u=t%n,a=e-o*s,c=r-i*s;t=n,n=u,e=o,r=i,o=a,i=c}return{g:t,x:e,y:r}}function r(t,e){let r=\"number\"==typeof t?BigInt(n(t)):n(t),o=\"number\"==typeof e?BigInt(n(e)):n(e);if(0n===r)return o;if(0n===o)return r;let i=0n;for(;0n===(1n&(r|o));)r>>=1n,o>>=1n,i++;for(;0n===(1n&r);)r>>=1n;do{for(;0n===(1n&o);)o>>=1n;if(r>o){const n=r;r=o,o=n}o-=r}while(0n!==o);return r<<i}function o(t,e){return\"number\"==typeof t&&(t=BigInt(t)),\"number\"==typeof e&&(e=BigInt(e)),0n===t&&0n===e?BigInt(0):n(t/r(t,e)*e)}function i(n,t){return n>=t?n:t}function s(n,t){return n>=t?t:n}function u(n,t){if(\"number\"==typeof n&&(n=BigInt(n)),\"number\"==typeof t&&(t=BigInt(t)),t<=0n)throw new RangeError(\"n must be > 0\");const e=n%t;return e<0n?e+t:e}function a(n,t){const r=e(u(n,t),t);if(1n!==r.g)throw new RangeError(`${n.toString()} does not have inverse modulo ${t.toString()}`);return u(r.x,t)}function c(t,e,r){if(\"number\"==typeof t&&(t=BigInt(t)),\"number\"==typeof e&&(e=BigInt(e)),\"number\"==typeof r&&(r=BigInt(r)),r<=0n)throw new RangeError(\"n must be > 0\");if(1n===r)return 0n;if(t=u(t,r),e<0n)return a(c(t,n(e),r),r);let o=1n;for(;e>0;)e%2n===1n&&(o=o*t%r),e/=2n,t=t**2n%r;return o}function f(n){let t=0n;for(const e of n.values()){t=(t<<8n)+BigInt(e)}return t}function g(n,t=!1){if(n<1)throw new RangeError(\"byteLength MUST be > 0\");return new Promise((function(e,r){{const r=new Uint8Array(n);if(n<=65536)self.crypto.getRandomValues(r);else for(let t=0;t<Math.ceil(n/65536);t++){const e=65536*t,o=e+65535<n?e+65535:n-1;self.crypto.getRandomValues(r.subarray(e,o))}t&&(r[0]=128|r[0]),e(r)}}))}function m(n,t=!1){if(n<1)throw new RangeError(\"byteLength MUST be > 0\");{const e=new Uint8Array(n);if(n<=65536)self.crypto.getRandomValues(e);else for(let t=0;t<Math.ceil(n/65536);t++){const r=65536*t,o=r+65535<n?r+65535:n-1;self.crypto.getRandomValues(e.subarray(r,o))}return t&&(e[0]=128|e[0]),e}}function d(n,t=!1){if(n<1)throw new RangeError(\"bitLength MUST be > 0\");const e=Math.ceil(n/8),r=n%8;return new Promise(((n,o)=>{g(e,!1).then((function(e){if(0!==r&&(e[0]=e[0]&2**r-1),t){const n=0!==r?2**(r-1):128;e[0]=e[0]|n}n(e)}))}))}function b(n,t=!1){if(n<1)throw new RangeError(\"bitLength MUST be > 0\");const e=m(Math.ceil(n/8),!1),r=n%8;if(0!==r&&(e[0]=e[0]&2**r-1),t){const n=0!==r?2**(r-1):128;e[0]=e[0]|n}return e}function l(n,e=1n){if(n<=e)throw new RangeError(\"Arguments MUST be: max > min\");const r=n-e,o=t(r);let i;do{i=f(b(o))}while(i>r);return i+e}let w=!1;function h(n,t=16,e=!1){if(\"number\"==typeof n&&(n=BigInt(n)),n<0n)throw RangeError(\"w MUST be >= 0\");return new Promise(((e,r)=>{const o=new Worker(p());o.onmessage=n=>{void 0!==n?.data?._bcu?.isPrime&&(o.terminate(),e(n.data._bcu.isPrime))},o.onmessageerror=n=>{r(n)};const i={_bcu:{rnd:n,iterations:t,id:0}};o.postMessage(i)}))}function y(n,t){if(2n===n)return!0;if(0n===(1n&n)||1n===n)return!1;const e=[3n,5n,7n,11n,13n,17n,19n,23n,29n,31n,37n,41n,43n,47n,53n,59n,61n,67n,71n,73n,79n,83n,89n,97n,101n,103n,107n,109n,113n,127n,131n,137n,139n,149n,151n,157n,163n,167n,173n,179n,181n,191n,193n,197n,199n,211n,223n,227n,229n,233n,239n,241n,251n,257n,263n,269n,271n,277n,281n,283n,293n,307n,311n,313n,317n,331n,337n,347n,349n,353n,359n,367n,373n,379n,383n,389n,397n,401n,409n,419n,421n,431n,433n,439n,443n,449n,457n,461n,463n,467n,479n,487n,491n,499n,503n,509n,521n,523n,541n,547n,557n,563n,569n,571n,577n,587n,593n,599n,601n,607n,613n,617n,619n,631n,641n,643n,647n,653n,659n,661n,673n,677n,683n,691n,701n,709n,719n,727n,733n,739n,743n,751n,757n,761n,769n,773n,787n,797n,809n,811n,821n,823n,827n,829n,839n,853n,857n,859n,863n,877n,881n,883n,887n,907n,911n,919n,929n,937n,941n,947n,953n,967n,971n,977n,983n,991n,997n,1009n,1013n,1019n,1021n,1031n,1033n,1039n,1049n,1051n,1061n,1063n,1069n,1087n,1091n,1093n,1097n,1103n,1109n,1117n,1123n,1129n,1151n,1153n,1163n,1171n,1181n,1187n,1193n,1201n,1213n,1217n,1223n,1229n,1231n,1237n,1249n,1259n,1277n,1279n,1283n,1289n,1291n,1297n,1301n,1303n,1307n,1319n,1321n,1327n,1361n,1367n,1373n,1381n,1399n,1409n,1423n,1427n,1429n,1433n,1439n,1447n,1451n,1453n,1459n,1471n,1481n,1483n,1487n,1489n,1493n,1499n,1511n,1523n,1531n,1543n,1549n,1553n,1559n,1567n,1571n,1579n,1583n,1597n];for(let t=0;t<e.length&&e[t]<=n;t++){const r=e[t];if(n===r)return!0;if(n%r===0n)return!1}let r=0n;const o=n-1n;let i=o;for(;i%2n===0n;)i/=2n,++r;const s=o/2n**r;do{let t=c(l(o,2n),s,n);if(1n===t||t===o)continue;let e=1;for(;e<r&&(t=c(t,2n,n),t!==o);){if(1n===t)return!1;e++}if(t!==o)return!1}while(0!=--t);return!0}function p(){let n=`\\n  'use strict';\\n  const ${e.name} = ${e.toString()};\\n  const ${a.name} = ${a.toString()};\\n  const ${c.name} = ${c.toString()};\\n  const ${u.name} = ${u.toString()};\\n  const ${b.name} = ${b.toString()};\\n  const ${m.name} = ${m.toString()};\\n  const ${l.name} = ${l.toString()};\\n  const ${h.name} = ${y.toString()};\\n  ${t.toString()};\\n  ${f.toString()};`;return n+=`\\n  onmessage = async function(msg) {\\n    if (msg !== undefined && msg.data !== undefined && msg.data._bcu !== undefined && msg.data._bcu.id !== undefined && msg.data._bcu.iterations !== undefined && msg.data._bcu.rnd !== undefined) {\\n      const msgToParent = {\\n        _bcu: {\\n          isPrime: await ${h.name}(msg.data._bcu.rnd, msg.data._bcu.iterations),\\n          value: msg.data._bcu.rnd,\\n          id: msg.data._bcu.id\\n        }\\n      };\\n      postMessage(msgToParent);\\n    }\\n  }`,function(n){n=`(() => {${n}})()`;const t=new Blob([n],{type:\"text/javascript\"});return window.URL.createObjectURL(t)}(n)}function $(n,t=16){if(n<1)throw new RangeError(\"bitLength MUST be > 0\");if(!w){let e=0n;do{e=f(b(n,!0))}while(!y(e,t));return new Promise((n=>{n(e)}))}return new Promise(((e,r)=>{const o=[],i=(r,i)=>{if(r._bcu.isPrime){for(let n=0;n<o.length;n++)o[n].terminate();for(;o.length>0;)o.pop();e(r._bcu.value)}else{const e=f(b(n,!0));try{const n={_bcu:{rnd:e,iterations:t,id:r._bcu.id}};i.postMessage(n)}catch(n){}}};{const n=p();for(let t=0;t<self.navigator.hardwareConcurrency-1;t++){const t=new Worker(n);t.onmessage=n=>i(n.data,t),o.push(t)}}for(let e=0;e<o.length;e++)d(n,!0).then((function(n){const r=f(n);o[e].postMessage({_bcu:{rnd:r,iterations:t,id:e}})})).catch(r)}))}function S(n,t=16){if(n<1)throw new RangeError(\"bitLength MUST be > 0\");let e=0n;do{e=f(b(n,!0))}while(!y(e,t));return e}void 0!==self.Worker&&(w=!0);export{n as abs,t as bitLength,e as eGcd,r as gcd,h as isProbablyPrime,o as lcm,i as max,s as min,a as modInv,c as modPow,$ as prime,S as primeSync,l as randBetween,d as randBits,b as randBitsSync,g as randBytes,m as randBytesSync,u as toZn};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]},"metadata":{},"sourceType":"module"}