{"ast":null,"code":"// Generated by psc version 0.9.3\n\"use strict\";\n\nvar Control_Applicative = require(\"../Control.Applicative\");\nvar Control_Apply = require(\"../Control.Apply\");\nvar Control_Bind = require(\"../Control.Bind\");\nvar Control_Comonad = require(\"../Control.Comonad\");\nvar Control_Extend = require(\"../Control.Extend\");\nvar Control_Monad = require(\"../Control.Monad\");\nvar Data_Bounded = require(\"../Data.Bounded\");\nvar Data_Eq = require(\"../Data.Eq\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Data_Functor_Invariant = require(\"../Data.Functor.Invariant\");\nvar Data_Monoid = require(\"../Data.Monoid\");\nvar Data_Ord = require(\"../Data.Ord\");\nvar Data_Semigroup = require(\"../Data.Semigroup\");\nvar Data_Semiring = require(\"../Data.Semiring\");\nvar Data_Show = require(\"../Data.Show\");\nvar Additive = function (x) {\n  return x;\n};\nvar showAdditive = function (dictShow) {\n  return new Data_Show.Show(function (v) {\n    return \"(Additive \" + (Data_Show.show(dictShow)(v) + \")\");\n  });\n};\nvar semigroupAdditive = function (dictSemiring) {\n  return new Data_Semigroup.Semigroup(function (v) {\n    return function (v1) {\n      return Data_Semiring.add(dictSemiring)(v)(v1);\n    };\n  });\n};\nvar runAdditive = function (v) {\n  return v;\n};\nvar monoidAdditive = function (dictSemiring) {\n  return new Data_Monoid.Monoid(function () {\n    return semigroupAdditive(dictSemiring);\n  }, Data_Semiring.zero(dictSemiring));\n};\nvar invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {\n  return function (v) {\n    return function (v1) {\n      return f(v1);\n    };\n  };\n});\nvar functorAdditive = new Data_Functor.Functor(function (f) {\n  return function (v) {\n    return f(v);\n  };\n});\nvar extendAdditive = new Control_Extend.Extend(function () {\n  return functorAdditive;\n}, function (f) {\n  return function (x) {\n    return f(x);\n  };\n});\nvar eqAdditive = function (dictEq) {\n  return new Data_Eq.Eq(function (v) {\n    return function (v1) {\n      return Data_Eq.eq(dictEq)(v)(v1);\n    };\n  });\n};\nvar ordAdditive = function (dictOrd) {\n  return new Data_Ord.Ord(function () {\n    return eqAdditive(dictOrd[\"__superclass_Data.Eq.Eq_0\"]());\n  }, function (v) {\n    return function (v1) {\n      return Data_Ord.compare(dictOrd)(v)(v1);\n    };\n  });\n};\nvar comonadAdditive = new Control_Comonad.Comonad(function () {\n  return extendAdditive;\n}, runAdditive);\nvar boundedAdditive = function (dictBounded) {\n  return new Data_Bounded.Bounded(function () {\n    return ordAdditive(dictBounded[\"__superclass_Data.Ord.Ord_0\"]());\n  }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));\n};\nvar applyAdditive = new Control_Apply.Apply(function () {\n  return functorAdditive;\n}, function (v) {\n  return function (v1) {\n    return v(v1);\n  };\n});\nvar bindAdditive = new Control_Bind.Bind(function () {\n  return applyAdditive;\n}, function (v) {\n  return function (f) {\n    return f(v);\n  };\n});\nvar applicativeAdditive = new Control_Applicative.Applicative(function () {\n  return applyAdditive;\n}, Additive);\nvar monadAdditive = new Control_Monad.Monad(function () {\n  return applicativeAdditive;\n}, function () {\n  return bindAdditive;\n});\nmodule.exports = {\n  Additive: Additive,\n  runAdditive: runAdditive,\n  eqAdditive: eqAdditive,\n  ordAdditive: ordAdditive,\n  boundedAdditive: boundedAdditive,\n  functorAdditive: functorAdditive,\n  invariantAdditive: invariantAdditive,\n  applyAdditive: applyAdditive,\n  applicativeAdditive: applicativeAdditive,\n  bindAdditive: bindAdditive,\n  monadAdditive: monadAdditive,\n  extendAdditive: extendAdditive,\n  comonadAdditive: comonadAdditive,\n  showAdditive: showAdditive,\n  semigroupAdditive: semigroupAdditive,\n  monoidAdditive: monoidAdditive\n};","map":{"version":3,"names":["Control_Applicative","require","Control_Apply","Control_Bind","Control_Comonad","Control_Extend","Control_Monad","Data_Bounded","Data_Eq","Data_Functor","Data_Functor_Invariant","Data_Monoid","Data_Ord","Data_Semigroup","Data_Semiring","Data_Show","Additive","x","showAdditive","dictShow","Show","v","show","semigroupAdditive","dictSemiring","Semigroup","v1","add","runAdditive","monoidAdditive","Monoid","zero","invariantAdditive","Invariant","f","functorAdditive","Functor","extendAdditive","Extend","eqAdditive","dictEq","Eq","eq","ordAdditive","dictOrd","Ord","compare","comonadAdditive","Comonad","boundedAdditive","dictBounded","Bounded","bottom","top","applyAdditive","Apply","bindAdditive","Bind","applicativeAdditive","Applicative","monadAdditive","Monad","module","exports"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/lib/Data.Monoid.Additive/index.js"],"sourcesContent":["// Generated by psc version 0.9.3\n\"use strict\";\nvar Control_Applicative = require(\"../Control.Applicative\");\nvar Control_Apply = require(\"../Control.Apply\");\nvar Control_Bind = require(\"../Control.Bind\");\nvar Control_Comonad = require(\"../Control.Comonad\");\nvar Control_Extend = require(\"../Control.Extend\");\nvar Control_Monad = require(\"../Control.Monad\");\nvar Data_Bounded = require(\"../Data.Bounded\");\nvar Data_Eq = require(\"../Data.Eq\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Data_Functor_Invariant = require(\"../Data.Functor.Invariant\");\nvar Data_Monoid = require(\"../Data.Monoid\");\nvar Data_Ord = require(\"../Data.Ord\");\nvar Data_Semigroup = require(\"../Data.Semigroup\");\nvar Data_Semiring = require(\"../Data.Semiring\");\nvar Data_Show = require(\"../Data.Show\");\nvar Additive = function (x) {\n    return x;\n};\nvar showAdditive = function (dictShow) {\n    return new Data_Show.Show(function (v) {\n        return \"(Additive \" + (Data_Show.show(dictShow)(v) + \")\");\n    });\n};\nvar semigroupAdditive = function (dictSemiring) {\n    return new Data_Semigroup.Semigroup(function (v) {\n        return function (v1) {\n            return Data_Semiring.add(dictSemiring)(v)(v1);\n        };\n    });\n};\nvar runAdditive = function (v) {\n    return v;\n};\nvar monoidAdditive = function (dictSemiring) {\n    return new Data_Monoid.Monoid(function () {\n        return semigroupAdditive(dictSemiring);\n    }, Data_Semiring.zero(dictSemiring));\n};\nvar invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {\n    return function (v) {\n        return function (v1) {\n            return f(v1);\n        };\n    };\n});\nvar functorAdditive = new Data_Functor.Functor(function (f) {\n    return function (v) {\n        return f(v);\n    };\n});\nvar extendAdditive = new Control_Extend.Extend(function () {\n    return functorAdditive;\n}, function (f) {\n    return function (x) {\n        return f(x);\n    };\n});\nvar eqAdditive = function (dictEq) {\n    return new Data_Eq.Eq(function (v) {\n        return function (v1) {\n            return Data_Eq.eq(dictEq)(v)(v1);\n        };\n    });\n};\nvar ordAdditive = function (dictOrd) {\n    return new Data_Ord.Ord(function () {\n        return eqAdditive(dictOrd[\"__superclass_Data.Eq.Eq_0\"]());\n    }, function (v) {\n        return function (v1) {\n            return Data_Ord.compare(dictOrd)(v)(v1);\n        };\n    });\n};\nvar comonadAdditive = new Control_Comonad.Comonad(function () {\n    return extendAdditive;\n}, runAdditive);\nvar boundedAdditive = function (dictBounded) {\n    return new Data_Bounded.Bounded(function () {\n        return ordAdditive(dictBounded[\"__superclass_Data.Ord.Ord_0\"]());\n    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));\n};\nvar applyAdditive = new Control_Apply.Apply(function () {\n    return functorAdditive;\n}, function (v) {\n    return function (v1) {\n        return v(v1);\n    };\n});\nvar bindAdditive = new Control_Bind.Bind(function () {\n    return applyAdditive;\n}, function (v) {\n    return function (f) {\n        return f(v);\n    };\n});\nvar applicativeAdditive = new Control_Applicative.Applicative(function () {\n    return applyAdditive;\n}, Additive);\nvar monadAdditive = new Control_Monad.Monad(function () {\n    return applicativeAdditive;\n}, function () {\n    return bindAdditive;\n});\nmodule.exports = {\n    Additive: Additive,\n    runAdditive: runAdditive,\n    eqAdditive: eqAdditive,\n    ordAdditive: ordAdditive,\n    boundedAdditive: boundedAdditive,\n    functorAdditive: functorAdditive,\n    invariantAdditive: invariantAdditive,\n    applyAdditive: applyAdditive,\n    applicativeAdditive: applicativeAdditive,\n    bindAdditive: bindAdditive,\n    monadAdditive: monadAdditive,\n    extendAdditive: extendAdditive,\n    comonadAdditive: comonadAdditive,\n    showAdditive: showAdditive,\n    semigroupAdditive: semigroupAdditive,\n    monoidAdditive: monoidAdditive\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}