{"ast":null,"code":"// Generated by psc version 0.9.3\n\"use strict\";\n\nvar Data_Array = require(\"../Data.Array\");\nvar Data_BigInt = require(\"../Data.BigInt\");\nvar Data_Maybe = require(\"../Data.Maybe\");\nvar Data_Modular = require(\"../Data.Modular\");\nvar Data_Set = require(\"../Data.Set\");\nvar Prelude = require(\"../Prelude\");\nvar Data_HeytingAlgebra = require(\"../Data.HeytingAlgebra\");\nvar Data_Ord = require(\"../Data.Ord\");\nvar Data_Ring = require(\"../Data.Ring\");\nvar Data_Eq = require(\"../Data.Eq\");\nvar Data_Unfoldable = require(\"../Data.Unfoldable\");\nvar Data_Foldable = require(\"../Data.Foldable\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Control_Semigroupoid = require(\"../Control.Semigroupoid\");\nvar LGroup = function () {\n  function LGroup(value0, value1, value2) {\n    this.value0 = value0;\n    this.value1 = value1;\n    this.value2 = value2;\n  }\n  ;\n  LGroup.create = function (value0) {\n    return function (value1) {\n      return function (value2) {\n        return new LGroup(value0, value1, value2);\n      };\n    };\n  };\n  return LGroup;\n}();\nvar validLGroup = function (v) {\n  return Data_Ord.greaterThanOrEq(Data_BigInt.ordBigInt)(v.value0)(Data_BigInt.fromInt(2)) && Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(v.value0)(Data_Ring.sub(Data_BigInt.ringBigInt)(v.value2)(Data_BigInt.fromInt(1))) && Data_Eq.eq(Data_BigInt.eqBigInt)(Data_BigInt.modPow(v.value0)(v.value1)(v.value2))(Data_BigInt.fromInt(1));\n};\nvar remDups = function (a) {\n  return Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Set.fromFoldable(Data_Foldable.foldableArray)(Data_BigInt.ordBigInt)(a));\n};\nvar order = function (p) {\n  return Data_EuclideanRing.div(Data_BigInt.euclideanRingBigInt)(Data_Ring.sub(Data_BigInt.ringBigInt)(p)(Data_BigInt.fromInt(1)))(Data_BigInt.fromInt(2));\n};\nvar members = function (v) {\n  return remDups(Data_Functor.map(Data_Functor.functorArray)(function ($16) {\n    return Data_Modular.mPow(v.value2)(v.value0)(Data_BigInt.fromInt($16));\n  })(Data_Array.range(0)(10000)));\n};\nvar member = function (v) {\n  return function (n) {\n    return Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(Data_BigInt.fromInt(1))(n) && Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(n)(v.value2) && Data_Eq.eq(Data_BigInt.eqBigInt)(Data_Modular.mPow(v.value2)(n)(v.value1))(Data_BigInt.fromInt(1));\n  };\n};\nvar lgEasy = new LGroup(Data_BigInt.fromInt(2), Data_BigInt.fromInt(1559), Data_BigInt.fromInt(3119));\nvar big = function (hex) {\n  return Data_Maybe.fromMaybe(Data_BigInt.fromInt(0))(Data_BigInt.fromBase(16)(hex));\n};\nvar lGroupFromHex = function (g) {\n  return function (q) {\n    return function (p) {\n      return new LGroup(big(g), big(q), big(p));\n    };\n  };\n};\nvar lgHard = function () {\n  var prime = big(\"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF\");\n  return new LGroup(Data_BigInt.fromInt(2), order(prime), prime);\n}();\nvar lgMedium = function () {\n  var prime = big(\"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A63A3620FFFFFFFFFFFFFFFF\");\n  return new LGroup(Data_BigInt.fromInt(2), order(prime), prime);\n}();\nmodule.exports = {\n  LGroup: LGroup,\n  big: big,\n  lGroupFromHex: lGroupFromHex,\n  lgEasy: lgEasy,\n  lgHard: lgHard,\n  lgMedium: lgMedium,\n  member: member,\n  members: members,\n  order: order,\n  remDups: remDups,\n  validLGroup: validLGroup\n};","map":{"version":3,"names":["Data_Array","require","Data_BigInt","Data_Maybe","Data_Modular","Data_Set","Prelude","Data_HeytingAlgebra","Data_Ord","Data_Ring","Data_Eq","Data_Unfoldable","Data_Foldable","Data_EuclideanRing","Data_Functor","Control_Semigroupoid","LGroup","value0","value1","value2","create","validLGroup","v","greaterThanOrEq","ordBigInt","fromInt","lessThanOrEq","sub","ringBigInt","eq","eqBigInt","modPow","remDups","a","toUnfoldable","unfoldableArray","fromFoldable","foldableArray","order","p","div","euclideanRingBigInt","members","map","functorArray","$16","mPow","range","member","n","lgEasy","big","hex","fromMaybe","fromBase","lGroupFromHex","g","q","lgHard","prime","lgMedium","module","exports"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/lib/Data.LGroup/index.js"],"sourcesContent":["// Generated by psc version 0.9.3\n\"use strict\";\nvar Data_Array = require(\"../Data.Array\");\nvar Data_BigInt = require(\"../Data.BigInt\");\nvar Data_Maybe = require(\"../Data.Maybe\");\nvar Data_Modular = require(\"../Data.Modular\");\nvar Data_Set = require(\"../Data.Set\");\nvar Prelude = require(\"../Prelude\");\nvar Data_HeytingAlgebra = require(\"../Data.HeytingAlgebra\");\nvar Data_Ord = require(\"../Data.Ord\");\nvar Data_Ring = require(\"../Data.Ring\");\nvar Data_Eq = require(\"../Data.Eq\");\nvar Data_Unfoldable = require(\"../Data.Unfoldable\");\nvar Data_Foldable = require(\"../Data.Foldable\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Control_Semigroupoid = require(\"../Control.Semigroupoid\");\nvar LGroup = (function () {\n    function LGroup(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    }\n    ;\n    LGroup.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new LGroup(value0, value1, value2);\n            };\n        };\n    };\n    return LGroup;\n})();\nvar validLGroup = function (v) {\n    return Data_Ord.greaterThanOrEq(Data_BigInt.ordBigInt)(v.value0)(Data_BigInt.fromInt(2)) && (Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(v.value0)(Data_Ring.sub(Data_BigInt.ringBigInt)(v.value2)(Data_BigInt.fromInt(1))) && Data_Eq.eq(Data_BigInt.eqBigInt)(Data_BigInt.modPow(v.value0)(v.value1)(v.value2))(Data_BigInt.fromInt(1)));\n};\nvar remDups = function (a) {\n    return Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Set.fromFoldable(Data_Foldable.foldableArray)(Data_BigInt.ordBigInt)(a));\n};\nvar order = function (p) {\n    return Data_EuclideanRing.div(Data_BigInt.euclideanRingBigInt)(Data_Ring.sub(Data_BigInt.ringBigInt)(p)(Data_BigInt.fromInt(1)))(Data_BigInt.fromInt(2));\n};\nvar members = function (v) {\n    return remDups(Data_Functor.map(Data_Functor.functorArray)(function ($16) {\n        return Data_Modular.mPow(v.value2)(v.value0)(Data_BigInt.fromInt($16));\n    })(Data_Array.range(0)(10000)));\n};\nvar member = function (v) {\n    return function (n) {\n        return Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(Data_BigInt.fromInt(1))(n) && (Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(n)(v.value2) && Data_Eq.eq(Data_BigInt.eqBigInt)(Data_Modular.mPow(v.value2)(n)(v.value1))(Data_BigInt.fromInt(1)));\n    };\n};\nvar lgEasy = new LGroup(Data_BigInt.fromInt(2), Data_BigInt.fromInt(1559), Data_BigInt.fromInt(3119));\nvar big = function (hex) {\n    return Data_Maybe.fromMaybe(Data_BigInt.fromInt(0))(Data_BigInt.fromBase(16)(hex));\n};\nvar lGroupFromHex = function (g) {\n    return function (q) {\n        return function (p) {\n            return new LGroup(big(g), big(q), big(p));\n        };\n    };\n};\nvar lgHard = (function () {\n    var prime = big(\"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF\");\n    return new LGroup(Data_BigInt.fromInt(2), order(prime), prime);\n})();\nvar lgMedium = (function () {\n    var prime = big(\"FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A63A3620FFFFFFFFFFFFFFFF\");\n    return new LGroup(Data_BigInt.fromInt(2), order(prime), prime);\n})();\nmodule.exports = {\n    LGroup: LGroup,\n    big: big,\n    lGroupFromHex: lGroupFromHex,\n    lgEasy: lgEasy,\n    lgHard: lgHard,\n    lgMedium: lgMedium,\n    member: member,\n    members: members,\n    order: order,\n    remDups: remDups,\n    validLGroup: validLGroup\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}