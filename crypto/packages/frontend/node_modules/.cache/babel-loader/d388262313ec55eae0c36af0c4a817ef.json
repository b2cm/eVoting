{"ast":null,"code":"import { gen, sign, verify, genPublicKey } from \"./lib/Crypto.LRS.SimpleAPI\";\nimport Big_Integer from \"big-integer\";\nexport class KeyPair {\n  constructor(party) {\n    this._party = party ? party : gen();\n  }\n  get publicKey() {\n    return this._party.value0;\n  }\n  get privateKey() {\n    return this._party.value1;\n  }\n  get party() {\n    return this._party;\n  }\n}\nexport function generatePair() {\n  return new KeyPair();\n}\nexport class Signature {\n  constructor(signature) {\n    this.signature = signature;\n  }\n  get inner() {\n    return this.signature;\n  }\n  get y0() {\n    return this.signature.value0;\n  }\n  get s() {\n    return this.signature.value1;\n  }\n  get c() {\n    return this.signature.value2;\n  }\n  toJSON(_k) {\n    const y0 = this.y0.toString(16);\n    const s = this.s.toString(16);\n    const c = this.c.map(x => x.toString(16));\n    return {\n      y0,\n      s,\n      c\n    };\n  }\n}\nexport function signData(ring, pair, data) {\n  const s = sign(ring)(pair.party)(data)();\n  return new Signature(s);\n}\nexport function verifySignature(data, signature, ring) {\n  return verify(ring)(signature.inner)(data);\n}\nexport function verifyKeyPair(privateKey, publicKey) {\n  const correctPubKey = genPublicKey(Big_Integer(privateKey));\n  return correctPubKey.eq(Big_Integer(publicKey));\n}","map":{"version":3,"names":["gen","sign","verify","genPublicKey","Big_Integer","KeyPair","constructor","party","_party","publicKey","value0","privateKey","value1","generatePair","Signature","signature","inner","y0","s","c","value2","toJSON","_k","toString","map","x","signData","ring","pair","data","verifySignature","verifyKeyPair","correctPubKey","eq"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/index.js"],"sourcesContent":["import { gen, sign, verify, genPublicKey, } from \"./lib/Crypto.LRS.SimpleAPI\";\nimport Big_Integer from \"big-integer\";\nexport class KeyPair {\n    constructor(party) {\n        this._party = party ? party : gen();\n    }\n    get publicKey() {\n        return this._party.value0;\n    }\n    get privateKey() {\n        return this._party.value1;\n    }\n    get party() {\n        return this._party;\n    }\n}\nexport function generatePair() {\n    return new KeyPair();\n}\nexport class Signature {\n    constructor(signature) {\n        this.signature = signature;\n    }\n    get inner() {\n        return this.signature;\n    }\n    get y0() {\n        return this.signature.value0;\n    }\n    get s() {\n        return this.signature.value1;\n    }\n    get c() {\n        return this.signature.value2;\n    }\n    toJSON(_k) {\n        const y0 = this.y0.toString(16);\n        const s = this.s.toString(16);\n        const c = this.c.map((x) => x.toString(16));\n        return {\n            y0,\n            s,\n            c,\n        };\n    }\n}\nexport function signData(ring, pair, data) {\n    const s = sign(ring)(pair.party)(data)();\n    return new Signature(s);\n}\nexport function verifySignature(data, signature, ring) {\n    return verify(ring)(signature.inner)(data);\n}\nexport function verifyKeyPair(privateKey, publicKey) {\n    const correctPubKey = genPublicKey(Big_Integer(privateKey));\n    return correctPubKey.eq(Big_Integer(publicKey));\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,YAAY,QAAS,4BAA4B;AAC7E,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAO,MAAMC,OAAO,CAAC;EACjBC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,CAACC,MAAM,GAAGD,KAAK,GAAGA,KAAK,GAAGP,GAAG,CAAC,CAAC;EACvC;EACA,IAAIS,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACD,MAAM,CAACE,MAAM;EAC7B;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACH,MAAM,CAACI,MAAM;EAC7B;EACA,IAAIL,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACC,MAAM;EACtB;AACJ;AACA,OAAO,SAASK,YAAYA,CAAA,EAAG;EAC3B,OAAO,IAAIR,OAAO,CAAC,CAAC;AACxB;AACA,OAAO,MAAMS,SAAS,CAAC;EACnBR,WAAWA,CAACS,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACA,IAAIC,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACD,SAAS;EACzB;EACA,IAAIE,EAAEA,CAAA,EAAG;IACL,OAAO,IAAI,CAACF,SAAS,CAACL,MAAM;EAChC;EACA,IAAIQ,CAACA,CAAA,EAAG;IACJ,OAAO,IAAI,CAACH,SAAS,CAACH,MAAM;EAChC;EACA,IAAIO,CAACA,CAAA,EAAG;IACJ,OAAO,IAAI,CAACJ,SAAS,CAACK,MAAM;EAChC;EACAC,MAAMA,CAACC,EAAE,EAAE;IACP,MAAML,EAAE,GAAG,IAAI,CAACA,EAAE,CAACM,QAAQ,CAAC,EAAE,CAAC;IAC/B,MAAML,CAAC,GAAG,IAAI,CAACA,CAAC,CAACK,QAAQ,CAAC,EAAE,CAAC;IAC7B,MAAMJ,CAAC,GAAG,IAAI,CAACA,CAAC,CAACK,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC3C,OAAO;MACHN,EAAE;MACFC,CAAC;MACDC;IACJ,CAAC;EACL;AACJ;AACA,OAAO,SAASO,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EACvC,MAAMX,CAAC,GAAGjB,IAAI,CAAC0B,IAAI,CAAC,CAACC,IAAI,CAACrB,KAAK,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;EACxC,OAAO,IAAIf,SAAS,CAACI,CAAC,CAAC;AAC3B;AACA,OAAO,SAASY,eAAeA,CAACD,IAAI,EAAEd,SAAS,EAAEY,IAAI,EAAE;EACnD,OAAOzB,MAAM,CAACyB,IAAI,CAAC,CAACZ,SAAS,CAACC,KAAK,CAAC,CAACa,IAAI,CAAC;AAC9C;AACA,OAAO,SAASE,aAAaA,CAACpB,UAAU,EAAEF,SAAS,EAAE;EACjD,MAAMuB,aAAa,GAAG7B,YAAY,CAACC,WAAW,CAACO,UAAU,CAAC,CAAC;EAC3D,OAAOqB,aAAa,CAACC,EAAE,CAAC7B,WAAW,CAACK,SAAS,CAAC,CAAC;AACnD"},"metadata":{},"sourceType":"module"}