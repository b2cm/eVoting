{"ast":null,"code":"//@ts-nocheck\n// Generated by psc version 0.9.3\n\"use strict\";\n\nvar Crypto_Sha512 = require(\"../Crypto.Sha512\");\nvar Data_Array = require(\"../Data.Array\");\nvar Data_BigInt = require(\"../Data.BigInt\");\nvar Data_Foldable = require(\"../Data.Foldable\");\nvar Data_LGroup = require(\"../Data.LGroup\");\nvar Data_Maybe = require(\"../Data.Maybe\");\nvar Data_Modular = require(\"../Data.Modular\");\nvar Prelude = require(\"../Prelude\");\nvar Debug_Trace = require(\"../Debug.Trace\");\nvar Data_Show = require(\"../Data.Show\");\nvar Data_Semigroup = require(\"../Data.Semigroup\");\nvar Data_Eq = require(\"../Data.Eq\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Data_Semiring = require(\"../Data.Semiring\");\nvar Data_Ring = require(\"../Data.Ring\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing\");\nvar BigInteger = require(\"big-integer\");\nvar {\n  enc,\n  algo\n} = require(\"crypto-js\");\nvar Signature = function () {\n  function Signature(value0, value1, value2) {\n    this.value0 = value0;\n    this.value1 = value1;\n    this.value2 = value2;\n  }\n  Signature.create = function (value0) {\n    return function (value1) {\n      return function (value2) {\n        return new Signature(value0, value1, value2);\n      };\n    };\n  };\n  return Signature;\n}();\nvar Party = function () {\n  function Party(value0, value1) {\n    this.value0 = value0;\n    this.value1 = value1;\n  }\n  Party.create = function (value0) {\n    return function (value1) {\n      return new Party(value0, value1);\n    };\n  };\n  return Party;\n}();\nvar showSignature = new Data_Show.Show(function (v) {\n  return \"(Signature \" + (Data_Show.show(Data_BigInt.showBigInt)(v.value0) + (\" \" + (Data_Show.show(Data_BigInt.showBigInt)(v.value1) + (\" \" + (Data_Show.show(Data_Show.showArray(Data_BigInt.showBigInt))(v.value2) + \")\")))));\n});\nvar pureLink = function (v) {\n  return function (v1) {\n    return Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(v1.value0);\n  };\n};\nvar publicKey = function (v) {\n  return v.value0;\n};\nvar privateKey = function (v) {\n  return v.value1;\n};\nvar makePublicKey = function (v) {\n  return function (priv) {\n    return Data_Modular.mPow(v.value2)(v.value0)(priv);\n  };\n};\nvar b2 = Data_BigInt.fromInt(2);\nvar b1 = Data_BigInt.fromInt(1);\nvar b0 = Data_BigInt.fromInt(0);\nvar hash = function (v) {\n  return function (salt) {\n    return function (bits) {\n      var distinctHashes = Data_Functor.map(Data_Functor.functorArray)(function (x) {\n        return algo.HMAC.create(algo.SHA512, x).update(salt).update(bits).finalize().toString(enc.Hex);\n      })(Data_Functor.map(Data_Functor.functorArray)(function (v1) {\n        return salt + v1;\n      })([\"a\", \"b\", \"c\", \"d\", \"e\"]));\n      var hashed2560bits = Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupString))(\"\")(distinctHashes);\n      var bigInt = Data_Maybe.fromMaybe(b0)(Data_BigInt.fromBase(16)(hashed2560bits));\n      return Data_Modular.mMod(bigInt)(v.value1);\n    };\n  };\n};\nvar hash1 = function (v) {\n  return function (bits) {\n    return hash(v)(\"salt1\")(bits);\n  };\n};\nvar hash2 = function (v) {\n  return function (bits) {\n    var h = Data_Semiring.add(Data_BigInt.semiringBigInt)(Data_Modular.mMod(hash(v)(\"salt3\")(bits))(Data_Ring.sub(Data_BigInt.ringBigInt)(v.value1)(b2)))(b2);\n    return Data_Modular.mMod(Data_Semiring.mul(Data_BigInt.semiringBigInt)(h)(h))(Data_Semiring.add(Data_BigInt.semiringBigInt)(Data_Semiring.mul(Data_BigInt.semiringBigInt)(b2)(v.value1))(b1));\n  };\n};\nfunction processMessage(m) {\n  let mS = m;\n  if (ArrayBuffer.isView(mS)) {\n    mS = new Uint8Array(mS.buffer);\n  }\n  if (typeof ms == \"string\") {\n    mS = new TextEncoder().encode(mS);\n  }\n  if (mS instanceof ArrayBuffer) {\n    mS = new Uint8Array(mS);\n  }\n  if (mS instanceof Uint8Array) {\n    let arr = Array(mS.length);\n    mS.forEach((n, idx) => {\n      arr[idx] = n.toString(16);\n    });\n    mS = arr.join(\"\");\n  }\n  if (typeof mS == \"bigint\" || mS instanceof BigInteger) {\n    mS = mS.toString(16);\n  }\n  return mS;\n}\nvar pureVerify = function (v) {\n  return function (y) {\n    return function (v1) {\n      return function (m) {\n        let mS = processMessage(m);\n        var l = Data_Modular.mJoin(y);\n        var h = hash2(v)(l);\n        var b = Data_Modular.mMul(v.value2)(Data_Modular.mPow(v.value2)(h)(v1.value1))(Data_Modular.mPow(v.value2)(v1.value0)(Data_Foldable.sum(Data_Foldable.foldableArray)(Data_BigInt.semiringBigInt)(v1.value2)));\n        var a = Data_Modular.mMul(v.value2)(Data_Modular.mPow(v.value2)(v.value0)(v1.value1))(Data_Modular.mProd(v.value2)(Data_Array.zipWith(Data_Modular.mPow(v.value2))(y)(v1.value2)));\n        var h1 = hash1(v)(enc.Hex.parse(l + v1.value0.toString(16) + mS + a.toString(16) + b.toString(16)));\n        return Data_Eq.eq(Data_BigInt.eqBigInt)(Data_EuclideanRing.mod(Data_BigInt.euclideanRingBigInt)(Data_Foldable.sum(Data_Foldable.foldableArray)(Data_BigInt.semiringBigInt)(v1.value2))(v.value1))(h1);\n      };\n    };\n  };\n};\nvar pureSign = function (rands) {\n  return function (v) {\n    return function (y) {\n      return function (v1) {\n        return function (m) {\n          let mS = processMessage(m);\n          var n = Data_Maybe.fromMaybe(0)(Data_Array.findIndex(function (v2) {\n            return Data_Eq.eq(Data_BigInt.eqBigInt)(v1.value0)(v2);\n          })(y));\n          var l = Data_Modular.mJoin(y);\n          var h = hash2(v)(l);\n          var y0 = Data_Modular.mPow(v.value2)(h)(v1.value1);\n          var e = Data_Functor.map(Data_Functor.functorArray)(function (v2) {\n            return Data_Modular.mMod(v2)(v.value1);\n          })(rands);\n          var r = Data_Maybe.fromMaybe(b0)(Data_Array.index(e)(n));\n          var c = Data_Maybe.fromMaybe(e)(Data_Array.updateAt(n)(b0)(e));\n          var sc = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_BigInt.semiringBigInt)(c);\n          var b = Data_Modular.mMul(v.value2)(Data_Modular.mPow(v.value2)(h)(r))(Data_Modular.mPow(v.value2)(y0)(sc));\n          var a = Data_Modular.mMul(v.value2)(Data_Modular.mPow(v.value2)(v.value0)(r))(Data_Modular.mProd(v.value2)(Data_Array.zipWith(Data_Modular.mPow(v.value2))(y)(c)));\n          var h1 = hash1(v)(enc.Hex.parse(l + y0.toString(16) + mS + a.toString(16) + b.toString(16)));\n          var ci = Data_Modular.mMod(Data_Ring.sub(Data_BigInt.ringBigInt)(h1)(sc))(v.value1);\n          var s = Data_Modular.mMod(Data_Ring.sub(Data_BigInt.ringBigInt)(r)(Data_Semiring.mul(Data_BigInt.semiringBigInt)(ci)(v1.value1)))(v.value1);\n          var sig = new Signature(y0, s, Data_Maybe.fromMaybe(c)(Data_Array.updateAt(n)(ci)(c)));\n          return sig;\n        };\n      };\n    };\n  };\n};\nmodule.exports = {\n  Party: Party,\n  Signature: Signature,\n  makePublicKey: makePublicKey,\n  privateKey: privateKey,\n  publicKey: publicKey,\n  pureLink: pureLink,\n  pureSign: pureSign,\n  pureVerify: pureVerify,\n  showSignature: showSignature\n};","map":{"version":3,"names":["Crypto_Sha512","require","Data_Array","Data_BigInt","Data_Foldable","Data_LGroup","Data_Maybe","Data_Modular","Prelude","Debug_Trace","Data_Show","Data_Semigroup","Data_Eq","Data_Functor","Data_Semiring","Data_Ring","Data_EuclideanRing","BigInteger","enc","algo","Signature","value0","value1","value2","create","Party","showSignature","Show","v","show","showBigInt","showArray","pureLink","v1","eq","eqBigInt","publicKey","privateKey","makePublicKey","priv","mPow","b2","fromInt","b1","b0","hash","salt","bits","distinctHashes","map","functorArray","x","HMAC","SHA512","update","finalize","toString","Hex","hashed2560bits","foldr","foldableArray","append","semigroupString","bigInt","fromMaybe","fromBase","mMod","hash1","hash2","h","add","semiringBigInt","sub","ringBigInt","mul","processMessage","m","mS","ArrayBuffer","isView","Uint8Array","buffer","ms","TextEncoder","encode","arr","Array","length","forEach","n","idx","join","pureVerify","y","l","mJoin","b","mMul","sum","a","mProd","zipWith","h1","parse","mod","euclideanRingBigInt","pureSign","rands","findIndex","v2","y0","e","r","index","c","updateAt","sc","ci","s","sig","module","exports"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/lib/Crypto.LRS/index.js"],"sourcesContent":["//@ts-nocheck\n// Generated by psc version 0.9.3\n\"use strict\";\nvar Crypto_Sha512 = require(\"../Crypto.Sha512\");\nvar Data_Array = require(\"../Data.Array\");\nvar Data_BigInt = require(\"../Data.BigInt\");\nvar Data_Foldable = require(\"../Data.Foldable\");\nvar Data_LGroup = require(\"../Data.LGroup\");\nvar Data_Maybe = require(\"../Data.Maybe\");\nvar Data_Modular = require(\"../Data.Modular\");\nvar Prelude = require(\"../Prelude\");\nvar Debug_Trace = require(\"../Debug.Trace\");\nvar Data_Show = require(\"../Data.Show\");\nvar Data_Semigroup = require(\"../Data.Semigroup\");\nvar Data_Eq = require(\"../Data.Eq\");\nvar Data_Functor = require(\"../Data.Functor\");\nvar Data_Semiring = require(\"../Data.Semiring\");\nvar Data_Ring = require(\"../Data.Ring\");\nvar Data_EuclideanRing = require(\"../Data.EuclideanRing\");\nvar BigInteger = require(\"big-integer\");\nvar { enc, algo } = require(\"crypto-js\");\nvar Signature = (function () {\n    function Signature(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    }\n    Signature.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new Signature(value0, value1, value2);\n            };\n        };\n    };\n    return Signature;\n})();\nvar Party = (function () {\n    function Party(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    }\n    Party.create = function (value0) {\n        return function (value1) {\n            return new Party(value0, value1);\n        };\n    };\n    return Party;\n})();\nvar showSignature = new Data_Show.Show(function (v) {\n    return (\"(Signature \" +\n        (Data_Show.show(Data_BigInt.showBigInt)(v.value0) +\n            (\" \" +\n                (Data_Show.show(Data_BigInt.showBigInt)(v.value1) +\n                    (\" \" +\n                        (Data_Show.show(Data_Show.showArray(Data_BigInt.showBigInt))(v.value2) +\n                            \")\"))))));\n});\nvar pureLink = function (v) {\n    return function (v1) {\n        return Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(v1.value0);\n    };\n};\nvar publicKey = function (v) {\n    return v.value0;\n};\nvar privateKey = function (v) {\n    return v.value1;\n};\nvar makePublicKey = function (v) {\n    return function (priv) {\n        return Data_Modular.mPow(v.value2)(v.value0)(priv);\n    };\n};\nvar b2 = Data_BigInt.fromInt(2);\nvar b1 = Data_BigInt.fromInt(1);\nvar b0 = Data_BigInt.fromInt(0);\nvar hash = function (v) {\n    return function (salt) {\n        return function (bits) {\n            var distinctHashes = Data_Functor.map(Data_Functor.functorArray)(function (x) {\n                return algo.HMAC.create(algo.SHA512, x)\n                    .update(salt)\n                    .update(bits)\n                    .finalize()\n                    .toString(enc.Hex);\n            })(Data_Functor.map(Data_Functor.functorArray)(function (v1) {\n                return salt + v1;\n            })([\"a\", \"b\", \"c\", \"d\", \"e\"]));\n            var hashed2560bits = Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupString))(\"\")(distinctHashes);\n            var bigInt = Data_Maybe.fromMaybe(b0)(Data_BigInt.fromBase(16)(hashed2560bits));\n            return Data_Modular.mMod(bigInt)(v.value1);\n        };\n    };\n};\nvar hash1 = function (v) {\n    return function (bits) {\n        return hash(v)(\"salt1\")(bits);\n    };\n};\nvar hash2 = function (v) {\n    return function (bits) {\n        var h = Data_Semiring.add(Data_BigInt.semiringBigInt)(Data_Modular.mMod(hash(v)(\"salt3\")(bits))(Data_Ring.sub(Data_BigInt.ringBigInt)(v.value1)(b2)))(b2);\n        return Data_Modular.mMod(Data_Semiring.mul(Data_BigInt.semiringBigInt)(h)(h))(Data_Semiring.add(Data_BigInt.semiringBigInt)(Data_Semiring.mul(Data_BigInt.semiringBigInt)(b2)(v.value1))(b1));\n    };\n};\nfunction processMessage(m) {\n    let mS = m;\n    if (ArrayBuffer.isView(mS)) {\n        mS = new Uint8Array(mS.buffer);\n    }\n    if (typeof ms == \"string\") {\n        mS = new TextEncoder().encode(mS);\n    }\n    if (mS instanceof ArrayBuffer) {\n        mS = new Uint8Array(mS);\n    }\n    if (mS instanceof Uint8Array) {\n        let arr = Array(mS.length);\n        mS.forEach((n, idx) => {\n            arr[idx] = n.toString(16);\n        });\n        mS = arr.join(\"\");\n    }\n    if (typeof mS == \"bigint\" || mS instanceof BigInteger) {\n        mS = mS.toString(16);\n    }\n    return mS;\n}\nvar pureVerify = function (v) {\n    return function (y) {\n        return function (v1) {\n            return function (m) {\n                let mS = processMessage(m);\n                var l = Data_Modular.mJoin(y);\n                var h = hash2(v)(l);\n                var b = Data_Modular.mMul(v.value2)(Data_Modular.mPow(v.value2)(h)(v1.value1))(Data_Modular.mPow(v.value2)(v1.value0)(Data_Foldable.sum(Data_Foldable.foldableArray)(Data_BigInt.semiringBigInt)(v1.value2)));\n                var a = Data_Modular.mMul(v.value2)(Data_Modular.mPow(v.value2)(v.value0)(v1.value1))(Data_Modular.mProd(v.value2)(Data_Array.zipWith(Data_Modular.mPow(v.value2))(y)(v1.value2)));\n                var h1 = hash1(v)(enc.Hex.parse(l + v1.value0.toString(16) + mS + a.toString(16) + b.toString(16)));\n                return Data_Eq.eq(Data_BigInt.eqBigInt)(Data_EuclideanRing.mod(Data_BigInt.euclideanRingBigInt)(Data_Foldable.sum(Data_Foldable.foldableArray)(Data_BigInt.semiringBigInt)(v1.value2))(v.value1))(h1);\n            };\n        };\n    };\n};\nvar pureSign = function (rands) {\n    return function (v) {\n        return function (y) {\n            return function (v1) {\n                return function (m) {\n                    let mS = processMessage(m);\n                    var n = Data_Maybe.fromMaybe(0)(Data_Array.findIndex(function (v2) {\n                        return Data_Eq.eq(Data_BigInt.eqBigInt)(v1.value0)(v2);\n                    })(y));\n                    var l = Data_Modular.mJoin(y);\n                    var h = hash2(v)(l);\n                    var y0 = Data_Modular.mPow(v.value2)(h)(v1.value1);\n                    var e = Data_Functor.map(Data_Functor.functorArray)(function (v2) {\n                        return Data_Modular.mMod(v2)(v.value1);\n                    })(rands);\n                    var r = Data_Maybe.fromMaybe(b0)(Data_Array.index(e)(n));\n                    var c = Data_Maybe.fromMaybe(e)(Data_Array.updateAt(n)(b0)(e));\n                    var sc = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_BigInt.semiringBigInt)(c);\n                    var b = Data_Modular.mMul(v.value2)(Data_Modular.mPow(v.value2)(h)(r))(Data_Modular.mPow(v.value2)(y0)(sc));\n                    var a = Data_Modular.mMul(v.value2)(Data_Modular.mPow(v.value2)(v.value0)(r))(Data_Modular.mProd(v.value2)(Data_Array.zipWith(Data_Modular.mPow(v.value2))(y)(c)));\n                    var h1 = hash1(v)(enc.Hex.parse(l + y0.toString(16) + mS + a.toString(16) + b.toString(16)));\n                    var ci = Data_Modular.mMod(Data_Ring.sub(Data_BigInt.ringBigInt)(h1)(sc))(v.value1);\n                    var s = Data_Modular.mMod(Data_Ring.sub(Data_BigInt.ringBigInt)(r)(Data_Semiring.mul(Data_BigInt.semiringBigInt)(ci)(v1.value1)))(v.value1);\n                    var sig = new Signature(y0, s, Data_Maybe.fromMaybe(c)(Data_Array.updateAt(n)(ci)(c)));\n                    return sig;\n                };\n            };\n        };\n    };\n};\nmodule.exports = {\n    Party: Party,\n    Signature: Signature,\n    makePublicKey: makePublicKey,\n    privateKey: privateKey,\n    publicKey: publicKey,\n    pureLink: pureLink,\n    pureSign: pureSign,\n    pureVerify: pureVerify,\n    showSignature: showSignature,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}