{"ast":null,"code":"// Generated by psc version 0.9.3\n\"use strict\";\n\nvar $foreign = require(\"./foreign\");\nvar Data_Unit = require(\"../Data.Unit\");\nvar HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {\n  this.conj = conj;\n  this.disj = disj;\n  this.ff = ff;\n  this.implies = implies;\n  this.not = not;\n  this.tt = tt;\n};\nvar tt = function (dict) {\n  return dict.tt;\n};\nvar not = function (dict) {\n  return dict.not;\n};\nvar implies = function (dict) {\n  return dict.implies;\n};\nvar heytingAlgebraUnit = new HeytingAlgebra(function (v) {\n  return function (v1) {\n    return Data_Unit.unit;\n  };\n}, function (v) {\n  return function (v1) {\n    return Data_Unit.unit;\n  };\n}, Data_Unit.unit, function (v) {\n  return function (v1) {\n    return Data_Unit.unit;\n  };\n}, function (v) {\n  return Data_Unit.unit;\n}, Data_Unit.unit);\nvar ff = function (dict) {\n  return dict.ff;\n};\nvar disj = function (dict) {\n  return dict.disj;\n};\nvar heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {\n  return function (b) {\n    return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);\n  };\n}, $foreign.boolNot, true);\nvar conj = function (dict) {\n  return dict.conj;\n};\nvar heytingAlgebraFunction = function (dictHeytingAlgebra) {\n  return new HeytingAlgebra(function (f) {\n    return function (g) {\n      return function (a) {\n        return conj(dictHeytingAlgebra)(f(a))(g(a));\n      };\n    };\n  }, function (f) {\n    return function (g) {\n      return function (a) {\n        return disj(dictHeytingAlgebra)(f(a))(g(a));\n      };\n    };\n  }, function (v) {\n    return ff(dictHeytingAlgebra);\n  }, function (f) {\n    return function (g) {\n      return function (a) {\n        return implies(dictHeytingAlgebra)(f(a))(g(a));\n      };\n    };\n  }, function (f) {\n    return function (a) {\n      return not(dictHeytingAlgebra)(f(a));\n    };\n  }, function (v) {\n    return tt(dictHeytingAlgebra);\n  });\n};\nmodule.exports = {\n  HeytingAlgebra: HeytingAlgebra,\n  conj: conj,\n  disj: disj,\n  ff: ff,\n  implies: implies,\n  not: not,\n  tt: tt,\n  heytingAlgebraBoolean: heytingAlgebraBoolean,\n  heytingAlgebraUnit: heytingAlgebraUnit,\n  heytingAlgebraFunction: heytingAlgebraFunction\n};","map":{"version":3,"names":["$foreign","require","Data_Unit","HeytingAlgebra","conj","disj","ff","implies","not","tt","dict","heytingAlgebraUnit","v","v1","unit","heytingAlgebraBoolean","boolConj","boolDisj","a","b","boolNot","heytingAlgebraFunction","dictHeytingAlgebra","f","g","module","exports"],"sources":["/Users/kemlohalex/Documents/evoting/crypto/packages/lrs/build/esm/lib/Data.HeytingAlgebra/index.js"],"sourcesContent":["// Generated by psc version 0.9.3\n\"use strict\";\nvar $foreign = require(\"./foreign\");\nvar Data_Unit = require(\"../Data.Unit\");\nvar HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {\n    this.conj = conj;\n    this.disj = disj;\n    this.ff = ff;\n    this.implies = implies;\n    this.not = not;\n    this.tt = tt;\n};\nvar tt = function (dict) {\n    return dict.tt;\n};\nvar not = function (dict) {\n    return dict.not;\n};\nvar implies = function (dict) {\n    return dict.implies;\n};\nvar heytingAlgebraUnit = new HeytingAlgebra(function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n}, function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n}, Data_Unit.unit, function (v) {\n    return function (v1) {\n        return Data_Unit.unit;\n    };\n}, function (v) {\n    return Data_Unit.unit;\n}, Data_Unit.unit);\nvar ff = function (dict) {\n    return dict.ff;\n};\nvar disj = function (dict) {\n    return dict.disj;\n};\nvar heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {\n    return function (b) {\n        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);\n    };\n}, $foreign.boolNot, true);\nvar conj = function (dict) {\n    return dict.conj;\n};\nvar heytingAlgebraFunction = function (dictHeytingAlgebra) {\n    return new HeytingAlgebra(function (f) {\n        return function (g) {\n            return function (a) {\n                return conj(dictHeytingAlgebra)(f(a))(g(a));\n            };\n        };\n    }, function (f) {\n        return function (g) {\n            return function (a) {\n                return disj(dictHeytingAlgebra)(f(a))(g(a));\n            };\n        };\n    }, function (v) {\n        return ff(dictHeytingAlgebra);\n    }, function (f) {\n        return function (g) {\n            return function (a) {\n                return implies(dictHeytingAlgebra)(f(a))(g(a));\n            };\n        };\n    }, function (f) {\n        return function (a) {\n            return not(dictHeytingAlgebra)(f(a));\n        };\n    }, function (v) {\n        return tt(dictHeytingAlgebra);\n    });\n};\nmodule.exports = {\n    HeytingAlgebra: HeytingAlgebra,\n    conj: conj,\n    disj: disj,\n    ff: ff,\n    implies: implies,\n    not: not,\n    tt: tt,\n    heytingAlgebraBoolean: heytingAlgebraBoolean,\n    heytingAlgebraUnit: heytingAlgebraUnit,\n    heytingAlgebraFunction: heytingAlgebraFunction\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}