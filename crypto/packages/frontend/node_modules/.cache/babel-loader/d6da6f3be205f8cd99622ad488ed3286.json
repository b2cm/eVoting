{"ast":null,"code":"import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function throttle(durationSelector, config) {\n  return operate(function (source, subscriber) {\n    var _a = config !== null && config !== void 0 ? config : {},\n      _b = _a.leading,\n      leading = _b === void 0 ? true : _b,\n      _c = _a.trailing,\n      trailing = _c === void 0 ? false : _c;\n    var hasValue = false;\n    var sendValue = null;\n    var throttled = null;\n    var isComplete = false;\n    var endThrottling = function () {\n      throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n    var cleanupThrottling = function () {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n    var startThrottle = function (value) {\n      return throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling));\n    };\n    var send = function () {\n      if (hasValue) {\n        hasValue = false;\n        var value = sendValue;\n        sendValue = null;\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      hasValue = true;\n      sendValue = value;\n      !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n    }, function () {\n      isComplete = true;\n      !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/throttle.ts"],"names":[],"mappings":"AAGA,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,wBAAwB,QAAQ,sBAAsB;AAC/D,SAAS,SAAS,QAAQ,yBAAyB;AA8EnD,OAAM,SAAU,QAAQ,CAAI,gBAAoD,EAAE,MAAuB,EAAA;EACvG,OAAO,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IAC1B,IAAA,EAAA,GAAuC,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAN,MAAM,GAAI,CAAA,CAAE;MAAjD,EAAA,GAAA,EAAA,CAAA,OAAc;MAAd,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAI,GAAA,EAAA;MAAE,EAAA,GAAA,EAAA,CAAA,QAAgB;MAAhB,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAK,GAAA,EAAiB;IACzD,IAAI,QAAQ,GAAG,KAAK;IACpB,IAAI,SAAS,GAAa,IAAI;IAC9B,IAAI,SAAS,GAAwB,IAAI;IACzC,IAAI,UAAU,GAAG,KAAK;IAEtB,IAAM,aAAa,GAAG,SAAA,CAAA,EAAA;MACpB,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,WAAW,CAAA,CAAE;MACxB,SAAS,GAAG,IAAI;MAChB,IAAI,QAAQ,EAAE;QACZ,IAAI,CAAA,CAAE;QACN,UAAU,IAAI,UAAU,CAAC,QAAQ,CAAA,CAAE;MACpC;IACH,CAAC;IAED,IAAM,iBAAiB,GAAG,SAAA,CAAA,EAAA;MACxB,SAAS,GAAG,IAAI;MAChB,UAAU,IAAI,UAAU,CAAC,QAAQ,CAAA,CAAE;IACrC,CAAC;IAED,IAAM,aAAa,GAAG,SAAA,CAAC,KAAQ,EAAA;MAC7B,OAAC,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAAC,UAAU,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;IAAjI,CAAkI;IAEpI,IAAM,IAAI,GAAG,SAAA,CAAA,EAAA;MACX,IAAI,QAAQ,EAAE;QAIZ,QAAQ,GAAG,KAAK;QAChB,IAAM,KAAK,GAAG,SAAU;QACxB,SAAS,GAAG,IAAI;QAEhB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC,UAAU,IAAI,aAAa,CAAC,KAAK,CAAC;MACpC;IACH,CAAC;IAED,MAAM,CAAC,SAAS,CACd,wBAAwB,CACtB,UAAU,EAMV,UAAC,KAAK,EAAA;MACJ,QAAQ,GAAG,IAAI;MACf,SAAS,GAAG,KAAK;MACjB,EAAE,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,OAAO,GAAG,IAAI,CAAA,CAAE,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;IAChF,CAAC,EACD,YAAA;MACE,UAAU,GAAG,IAAI;MACjB,EAAE,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAA,CAAE;IACpF,CAAC,CACF,CACF;EACH,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function throttle(durationSelector, config) {\n    return operate(function (source, subscriber) {\n        var _a = config !== null && config !== void 0 ? config : {}, _b = _a.leading, leading = _b === void 0 ? true : _b, _c = _a.trailing, trailing = _c === void 0 ? false : _c;\n        var hasValue = false;\n        var sendValue = null;\n        var throttled = null;\n        var isComplete = false;\n        var endThrottling = function () {\n            throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();\n            throttled = null;\n            if (trailing) {\n                send();\n                isComplete && subscriber.complete();\n            }\n        };\n        var cleanupThrottling = function () {\n            throttled = null;\n            isComplete && subscriber.complete();\n        };\n        var startThrottle = function (value) {\n            return (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n        };\n        var send = function () {\n            if (hasValue) {\n                hasValue = false;\n                var value = sendValue;\n                sendValue = null;\n                subscriber.next(value);\n                !isComplete && startThrottle(value);\n            }\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            sendValue = value;\n            !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        }, function () {\n            isComplete = true;\n            !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=throttle.js.map"]},"metadata":{},"sourceType":"module"}