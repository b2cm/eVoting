export function _fromBase_(just: any): (nothing: any) => (b: any) => (s: any) => any;
export { bigInt as fromInt };
export function toBase(b: any): (x: any) => any;
export function toString(x: any): any;
export function toNumber(x: any): any;
export function biAdd(x: any): (y: any) => any;
export function biMul(x: any): (y: any) => any;
export function biSub(x: any): (y: any) => any;
export function biMod(x: any): (y: any) => any;
export function biDiv(x: any): (y: any) => any;
export function biEquals(x: any): (y: any) => any;
export function biCompare(x: any): (y: any) => any;
export function abs(x: any): any;
export function even(x: any): any;
export function odd(x: any): any;
export function positive(x: any): any;
export function negative(x: any): any;
export function prime(x: any): any;
export function pow(x: any): (y: any) => any;
export function modPow(x: any): (y: any) => (z: any) => any;
import bigInt = require("big-integer");
