export function range(start: any): (end: any) => any[];
export function fromFoldableImpl(foldr: any): (xs: any) => any[];
export function length(xs: any): any;
export function cons(e: any): (l: any) => any[];
export function snoc(l: any): (e: any) => any;
export function _uncons_(empty: any): (next: any) => (xs: any) => any;
export function indexImpl(just: any): (nothing: any) => (xs: any) => (i: any) => any;
export function findIndexImpl(just: any): (nothing: any) => (f: any) => (xs: any) => any;
export function findLastIndexImpl(just: any): (nothing: any) => (f: any) => (xs: any) => any;
export function _insertAt(just: any): (nothing: any) => (i: any) => (a: any) => (l: any) => any;
export function _deleteAt(just: any): (nothing: any) => (i: any) => (l: any) => any;
export function _updateAt(just: any): (nothing: any) => (i: any) => (a: any) => (l: any) => any;
export function reverse(l: any): any;
export function concat(xss: any): any[];
export function filter(f: any): (xs: any) => any;
export function partition(f: any): (xs: any) => {
    yes: any[];
    no: any[];
};
export function sortImpl(f: any): (l: any) => any;
export function slice(s: any): (e: any) => (l: any) => any;
export function take(n: any): (l: any) => any;
export function drop(n: any): (l: any) => any;
export function zipWith(f: any): (xs: any) => (ys: any) => any[];
